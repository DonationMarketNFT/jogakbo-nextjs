{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/src/pages/mypage.tsx\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useRecoilState, useResetRecoilState } from \"recoil\";\nimport { media } from \"../../styles/theme\";\nimport { getBalance } from \"../api/UseCaver\";\nimport { myAddressState, myBalanceState } from \"../../atom\";\nimport { faClone } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Seo from \"../components/Seo\";\nimport { deleteAccount, getUserAddress } from \"../api/accountWc\";\nimport { useRouter } from \"next/dist/client/router\";\nimport axios from \"axios\";\nconst Wrapper = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__Wrapper\",\n  componentId: \"sc-6wvjb6-0\"\n})([\"height:100%;background:\", \";\"], props => props.theme.bgColor);\nconst Container = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__Container\",\n  componentId: \"sc-6wvjb6-1\"\n})([\"display:flex;flex-direction:column;padding:200px 0 70px 0;width:935px;margin:0 auto;\", \"{width:auto;padding:170px 0 100px 0;}\", \"{padding:100px 0 50px 0;}\"], media.tablet, media.mobile);\nconst ProfileContainer = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__ProfileContainer\",\n  componentId: \"sc-6wvjb6-2\"\n})([\"display:flex;flex-direction:column;align-items:center;margin-bottom:80px;\"]);\nconst ProfileImage = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__ProfileImage\",\n  componentId: \"sc-6wvjb6-3\"\n})([\"background-image:linear-gradient(rgba(0,0,0,0),rgba(0,0,0,0.5)),url(\", \");background-size:cover;background-position:center center;margin:10px;width:300px;height:300px;border-radius:50%;\", \"{width:220px;height:220px;}\", \"{width:200px;height:200px;}\"], props => props.bgphoto, media.tablet, media.mobile);\nconst ProfileInfoBox = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__ProfileInfoBox\",\n  componentId: \"sc-6wvjb6-4\"\n})([\"width:50%;margin:10px;\", \"{width:100%;padding:0 30px;}\"], media.mobile);\nconst ProfileInfo = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__ProfileInfo\",\n  componentId: \"sc-6wvjb6-5\"\n})([\"display:flex;position:relative;margin-top:20px;height:50px;label{position:absolute;top:-18px;left:5px;color:gray;}input{all:unset;color:\", \";height:40px;padding:0 10px;font-size:18px;width:100%;}\"], props => props.theme.textColor);\nconst Withdraw = /*#__PURE__*/styled.button.withConfig({\n  displayName: \"mypage__Withdraw\",\n  componentId: \"sc-6wvjb6-6\"\n})([\"width:50%;margin:0 auto;text-align:center;background:red;padding:10px 12px;border-radius:5px;color:white;font-size:12px;cursor:pointer;\"]);\nconst NFTContainer = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__NFTContainer\",\n  componentId: \"sc-6wvjb6-7\"\n})([\"position:relative;display:grid;grid-template-columns:repeat(4,1fr);gap:20px 15px;width:935px;padding:30px;margin:0 auto;margin-bottom:200px;h3{position:absolute;left:30px;color:\", \";}\", \"{width:auto;}\", \"{grid-template-columns:repeat(2,1fr);margin-bottom:100px;}\"], props => props.theme.textColor, media.tablet, media.mobile);\nconst NFTBox = /*#__PURE__*/styled(motion.div).withConfig({\n  displayName: \"mypage__NFTBox\",\n  componentId: \"sc-6wvjb6-8\"\n})([\"background:pink;background-size:cover;background-position:center center;height:200px;border-radius:10px;\", \"{height:150px;}\", \"{height:130px;}\"], media.tablet, media[768]);\nconst CopyBox = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__CopyBox\",\n  componentId: \"sc-6wvjb6-9\"\n})([\"position:absolute;right:10px;top:10px;color:white;display:flex;justify-content:center;align-items:center;cursor:pointer;\"]);\nconst boxVariants = {\n  hover: {\n    scale: 1.05\n  }\n};\nconst DEFAULT_IMAGE = \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\";\n\nfunction Mypage() {\n  const {\n    0: profile,\n    1: setProfile\n  } = useState(DEFAULT_IMAGE);\n  const [myAddress, setMyAddress] = useRecoilState(myAddressState);\n  const [myBalance, setMyBalance] = useRecoilState(myBalanceState);\n  const copyLinkRef = useRef();\n  const {\n    0: ownToken,\n    1: setOwnToken\n  } = useState([]);\n  const {\n    0: userId,\n    1: setUserId\n  } = useState(0);\n  const router = useRouter();\n  const resetAddressState = useResetRecoilState(myAddressState); // const getOwnTokenIds = async (address: string) => {\n  //   const ids = await testOwnTokenId(address);\n  //   return ids;\n  // };\n  // const getOwnTokenInfo = async () => {\n  //   if (myAddress !== \"0x00\") {\n  //     let ownTokenArray = [];\n  //     const ids = await getOwnTokenIds(myAddress);\n  //     for (let id of ids) {\n  //       const description = await testTokenId2Description(id);\n  //       const name = await testTokenId2Name(id);\n  //       ownTokenArray.push([id, name, description]);\n  //     }\n  //     setOwnToken(ownTokenArray);\n  //   }\n  // };\n  // const getUserData = async () => {\n  //   setModalProps({\n  //     title: \"Klip 지갑을 연동하시겠습니까?\",\n  //     onConfirm: () => {\n  //       KlipAPI.getAddress(setQrvalue, async (address: string) => {\n  //         setMyAddress(address);\n  //         const _balance = await getBalance(address);\n  //         setMyBalance(_balance);\n  //       });\n  //     },\n  //   });\n  //   // setConnectWallet(true);\n  // };\n  // useEffect(() => {\n  // getOwnTokenInfo();\n  // }, []);\n\n  const handleLogOut = async () => {\n    const user = await axios.get(\"/api/auth/logout\");\n    console.log(user);\n    resetAddressState();\n  };\n\n  const deleteUser = () => {\n    deleteAccount(userId);\n    alert(\"이용해주셔서 감사합니다\");\n    handleLogOut();\n    router.push(\"/\");\n  };\n\n  const copyAddress = () => {\n    copyLinkRef.current.focus();\n    copyLinkRef.current.select();\n    navigator.clipboard.writeText(copyLinkRef.current.value).then(() => {\n      alert(\"주소를 복사했습니다.\");\n    });\n  };\n\n  const getUserData = () => {\n    if (myAddress !== \"0x00\") {\n      // const result = await getUserAddress(myAddress, setData);\n      getUserAddress(myAddress, async id => {\n        await setUserId(id);\n        const balance = await getBalance(myAddress);\n        setMyBalance(balance);\n      });\n    }\n  };\n\n  useEffect(() => {\n    getUserData();\n  }, [myAddress]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Seo, {\n      title: \"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(ProfileContainer, {\n          children: [/*#__PURE__*/_jsxDEV(ProfileImage, {\n            bgphoto: profile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProfileInfoBox, {\n            children: myAddress !== \"0x00\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ProfileInfo, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"address\",\n                  children: \"Wallet Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"address\",\n                  readOnly: true,\n                  type: \"text\",\n                  value: myAddress,\n                  ref: copyLinkRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CopyBox, {\n                  onClick: copyAddress,\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faClone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ProfileInfo, {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"balance\",\n                  children: \"Wallet Balance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"balance\",\n                  readOnly: true,\n                  type: \"text\",\n                  value: `${myBalance} Klay`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NFTContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"My NFTs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), ownToken.map((data, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(NFTBox, {\n              variants: boxVariants,\n              whileHover: \"hover\",\n              children: data[1]\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this)\n          }, void 0, false))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Withdraw, {\n          onClick: deleteUser,\n          children: \"\\uD68C\\uC6D0 \\uD0C8\\uD1F4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default Mypage;","map":{"version":3,"sources":["/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/src/pages/mypage.tsx"],"names":["styled","motion","useEffect","useRef","useState","useRecoilState","useResetRecoilState","media","getBalance","myAddressState","myBalanceState","faClone","FontAwesomeIcon","Seo","deleteAccount","getUserAddress","useRouter","axios","Wrapper","div","props","theme","bgColor","Container","tablet","mobile","ProfileContainer","ProfileImage","bgphoto","ProfileInfoBox","ProfileInfo","textColor","Withdraw","button","NFTContainer","NFTBox","CopyBox","boxVariants","hover","scale","DEFAULT_IMAGE","Mypage","profile","setProfile","myAddress","setMyAddress","myBalance","setMyBalance","copyLinkRef","ownToken","setOwnToken","userId","setUserId","router","resetAddressState","handleLogOut","user","get","console","log","deleteUser","alert","push","copyAddress","current","focus","select","navigator","clipboard","writeText","value","then","getUserData","id","balance","map","data","i"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport {motion} from \"framer-motion\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {useRecoilState, useResetRecoilState} from \"recoil\";\nimport {color, media} from \"../../styles/theme\";\nimport {\n  getBalance,\n  testOwnTokenId,\n  testTokenId2Description,\n  testTokenId2Name,\n} from \"../api/UseCaver\";\nimport {myAddressState, myBalanceState} from \"../../atom\";\nimport {faClone} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport Seo from \"../components/Seo\";\nimport {deleteAccount, getAccount, getUserAddress} from \"../api/accountWc\";\nimport {useRouter} from \"next/dist/client/router\";\nimport axios from \"axios\";\nimport {getDataFromCookie} from \"../api/Login\";\n\nconst Wrapper = styled.div`\n  height: 100%;\n  background: ${props => props.theme.bgColor};\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 200px 0 70px 0;\n  width: 935px;\n  margin: 0 auto;\n  ${media.tablet} {\n    width: auto;\n    padding: 170px 0 100px 0;\n  }\n  ${media.mobile} {\n    padding: 100px 0 50px 0;\n  }\n`;\n\nconst ProfileContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 80px;\n`;\n\ninterface IProfile {\n  bgphoto: string;\n}\n\nconst ProfileImage = styled.div<IProfile>`\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.5)),\n    url(${props => props.bgphoto});\n  background-size: cover;\n  background-position: center center;\n  margin: 10px;\n  width: 300px;\n  height: 300px;\n  border-radius: 50%;\n  ${media.tablet} {\n    width: 220px;\n    height: 220px;\n  }\n  ${media.mobile} {\n    width: 200px;\n    height: 200px;\n  }\n`;\n\nconst ProfileInfoBox = styled.div`\n  width: 50%;\n  margin: 10px;\n  ${media.mobile} {\n    width: 100%;\n    padding: 0 30px;\n  }\n`;\n\nconst ProfileInfo = styled.div`\n  display: flex;\n  position: relative;\n  margin-top: 20px;\n  height: 50px;\n  label {\n    position: absolute;\n    top: -18px;\n    left: 5px;\n    color: gray;\n  }\n  input {\n    all: unset;\n    color: ${props => props.theme.textColor};\n    height: 40px;\n    padding: 0 10px;\n    font-size: 18px;\n    width: 100%;\n  }\n`;\n\nconst Withdraw = styled.button`\n  width: 50%;\n  margin: 0 auto;\n  text-align: center;\n  background: red;\n  padding: 10px 12px;\n  border-radius: 5px;\n  color: white;\n  font-size: 12px;\n  cursor: pointer;\n`;\n\nconst NFTContainer = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 20px 15px;\n  width: 935px;\n  padding: 30px;\n  margin: 0 auto;\n  margin-bottom: 200px;\n  h3 {\n    position: absolute;\n    left: 30px;\n    color: ${props => props.theme.textColor};\n  }\n  ${media.tablet} {\n    width: auto;\n  }\n  ${media.mobile} {\n    grid-template-columns: repeat(2, 1fr);\n    margin-bottom: 100px;\n  }\n`;\n\nconst NFTBox = styled(motion.div)`\n  background: pink;\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  border-radius: 10px;\n  ${media.tablet} {\n    height: 150px;\n  }\n  ${media[768]} {\n    height: 130px;\n  }\n`;\n\nconst CopyBox = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst boxVariants = {hover: {scale: 1.05}};\n\nconst DEFAULT_IMAGE =\n  \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\";\n\nfunction Mypage() {\n  const [profile, setProfile] = useState(DEFAULT_IMAGE);\n  const [myAddress, setMyAddress] = useRecoilState(myAddressState);\n  const [myBalance, setMyBalance] = useRecoilState(myBalanceState);\n  const copyLinkRef = useRef<any>();\n  const [ownToken, setOwnToken] = useState<any[]>([]);\n  const [userId, setUserId] = useState(0);\n  const router = useRouter();\n  const resetAddressState = useResetRecoilState(myAddressState);\n\n  // const getOwnTokenIds = async (address: string) => {\n  //   const ids = await testOwnTokenId(address);\n  //   return ids;\n  // };\n\n  // const getOwnTokenInfo = async () => {\n  //   if (myAddress !== \"0x00\") {\n  //     let ownTokenArray = [];\n  //     const ids = await getOwnTokenIds(myAddress);\n  //     for (let id of ids) {\n  //       const description = await testTokenId2Description(id);\n  //       const name = await testTokenId2Name(id);\n  //       ownTokenArray.push([id, name, description]);\n  //     }\n  //     setOwnToken(ownTokenArray);\n  //   }\n  // };\n\n  // const getUserData = async () => {\n  //   setModalProps({\n  //     title: \"Klip 지갑을 연동하시겠습니까?\",\n  //     onConfirm: () => {\n  //       KlipAPI.getAddress(setQrvalue, async (address: string) => {\n  //         setMyAddress(address);\n  //         const _balance = await getBalance(address);\n  //         setMyBalance(_balance);\n  //       });\n  //     },\n  //   });\n  //   // setConnectWallet(true);\n  // };\n\n  // useEffect(() => {\n  // getOwnTokenInfo();\n  // }, []);\n\n  const handleLogOut = async () => {\n    const user = await axios.get(\"/api/auth/logout\");\n    console.log(user);\n    resetAddressState();\n  };\n\n  const deleteUser = () => {\n    deleteAccount(userId);\n    alert(\"이용해주셔서 감사합니다\");\n    handleLogOut();\n    router.push(\"/\");\n  };\n\n  const copyAddress = () => {\n    copyLinkRef.current.focus();\n    copyLinkRef.current.select();\n    navigator.clipboard.writeText(copyLinkRef.current.value).then(() => {\n      alert(\"주소를 복사했습니다.\");\n    });\n  };\n\n  const getUserData = () => {\n    if (myAddress !== \"0x00\") {\n      // const result = await getUserAddress(myAddress, setData);\n      getUserAddress(myAddress, async (id: number) => {\n        await setUserId(id);\n        const balance = await getBalance(myAddress);\n        setMyBalance(balance);\n      });\n    }\n  };\n\n  useEffect(() => {\n    getUserData();\n  }, [myAddress]);\n\n  return (\n    <>\n      <Seo title=\"마이페이지\" />\n      <Wrapper>\n        <Container>\n          <ProfileContainer>\n            <ProfileImage bgphoto={profile} />\n            <ProfileInfoBox>\n              {myAddress !== \"0x00\" && (\n                <>\n                  <ProfileInfo>\n                    <label htmlFor=\"address\">Wallet Address</label>\n                    <input\n                      id=\"address\"\n                      readOnly\n                      type=\"text\"\n                      value={myAddress}\n                      ref={copyLinkRef}\n                    />\n                    <CopyBox onClick={copyAddress}>\n                      <FontAwesomeIcon icon={faClone} />\n                    </CopyBox>\n                  </ProfileInfo>\n                  <ProfileInfo>\n                    <label htmlFor=\"balance\">Wallet Balance</label>\n                    <input\n                      id=\"balance\"\n                      readOnly\n                      type=\"text\"\n                      value={`${myBalance} Klay`}\n                    />\n                  </ProfileInfo>\n                </>\n              )}\n            </ProfileInfoBox>\n          </ProfileContainer>\n          <NFTContainer>\n            <h3>My NFTs</h3>\n            {ownToken.map((data, i) => (\n              <>\n                <NFTBox key={i} variants={boxVariants} whileHover=\"hover\">\n                  {data[1]}\n                </NFTBox>\n              </>\n            ))}\n          </NFTContainer>\n          <Withdraw onClick={deleteUser}>회원 탈퇴</Withdraw>\n        </Container>\n      </Wrapper>\n    </>\n  );\n}\n\nexport default Mypage;\n"]},"metadata":{},"sourceType":"module"}