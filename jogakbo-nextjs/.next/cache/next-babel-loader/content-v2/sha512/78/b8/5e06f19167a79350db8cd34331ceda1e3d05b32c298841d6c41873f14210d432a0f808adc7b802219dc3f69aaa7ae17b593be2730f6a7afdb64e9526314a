{"ast":null,"code":"import axios from 'axios';\nimport { DONATION_CONTRACT_ADDRESS } from '../constants/constants.cypress';\nconst A2P_API_PREPARE_URL = 'https://a2a-api.klipwallet.com/v2/a2a/prepare';\nconst APP_NAME = 'JOGAKBO'; // const isMobile = window.screen.width >= 1280 ? false : true;\n\nconst isMobile = false;\n\nconst getKlipAccessUrl = (method, request_key) => {\n  if (method === 'QR') {\n    return `https://klipwallet.com/?target=/a2a?request_key=${request_key}`;\n  }\n\n  return `kakaotalk://klipwallet/open?url=https://klipwallet.com/?target=/a2a?request_key=${request_key}`;\n};\n\nexport const refund = async (_campaignId, _userAddr, setQrvalue, callback) => {\n  const functionJson = '{ \"constant\": false, \"inputs\": [ { \"name\": \"_campaignId\", \"type\": \"uint256\" }, { \"name\": \"_userAddr\", \"type\": \"address\" } ], \"name\": \"refund\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }';\n  executeContract(DONATION_CONTRACT_ADDRESS, functionJson, '0', `[\\\"${_campaignId}\\\",\\\"${_userAddr}\\\"]`, setQrvalue, callback);\n};\nexport const donateTocampaign = async (_campaignId, _amount, setQrvalue, callback) => {\n  const functionJson = '{ \"constant\": false, \"inputs\": [ { \"name\": \"_campaignId\", \"type\": \"uint256\" }, { \"name\": \"_amount\", \"type\": \"uint256\" } ], \"name\": \"donateTocampaign\", \"outputs\": [], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"function\" }';\n  executeContract(DONATION_CONTRACT_ADDRESS, functionJson, (_amount * 10 ** 18).toString(), `[\\\"${_campaignId}\\\",\\\"${_amount}\\\"]`, setQrvalue, callback);\n};\nexport const setStateToRefund = async (_campaignId, setQrvalue, callback) => {\n  const functionJson = ' { \"constant\": false, \"inputs\": [ { \"name\": \"_campaignId\", \"type\": \"uint256\" } ], \"name\": \"setStateToRefund\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }';\n  executeContract(DONATION_CONTRACT_ADDRESS, functionJson, '0', `[\\\"${_campaignId}\\\"]`, setQrvalue, callback);\n};\nexport const createCampaign = async (_campaign_name, _campaign_description, _target_amount, setQrvalue, callback) => {\n  const functionJson = ' { \"constant\": false, \"inputs\": [ { \"name\": \"_campaign_name\", \"type\": \"string\" }, { \"name\": \"_campaign_description\", \"type\": \"string\" }, { \"name\": \"_target_amount\", \"type\": \"uint256\" } ], \"name\": \"createCampaign\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }';\n  executeContract(DONATION_CONTRACT_ADDRESS, functionJson, '0', `[\\\"${_campaign_name}\\\",\\\"${_campaign_description}\\\",\\\"${_target_amount}\\\"]`, setQrvalue, callback);\n};\nexport const executeContract = (txTo, functionJSON, value, params, setQrvalue, callback) => {\n  axios.post(A2P_API_PREPARE_URL, {\n    bapp: {\n      name: APP_NAME\n    },\n    type: 'execute_contract',\n    transaction: {\n      to: txTo,\n      abi: functionJSON,\n      value: value,\n      params: params\n    }\n  }).then(response => {\n    const {\n      request_key\n    } = response.data;\n\n    if (isMobile) {\n      window.location.href = getKlipAccessUrl('android', request_key);\n    } else {\n      setQrvalue(getKlipAccessUrl('QR', request_key));\n    }\n\n    let timerId = setInterval(() => {\n      axios.get(`https://a2a-api.klipwallet.com/v2/a2a/result?request_key=${request_key}`).then(res => {\n        if (res.data.result) {\n          console.log(`[result] ${JSON.stringify(res.data.result)}`);\n          callback(res.data.result);\n          clearInterval(timerId);\n          setQrvalue('DEFAULT');\n        }\n      });\n    }, 1000);\n  });\n};\nexport const getAddress = (setQrvalue, callback) => {\n  axios.post(A2P_API_PREPARE_URL, {\n    bapp: {\n      name: APP_NAME\n    },\n    type: 'auth'\n  }).then(response => {\n    const {\n      request_key\n    } = response.data;\n\n    if (isMobile) {\n      window.location.href = getKlipAccessUrl('android', request_key);\n    } else {\n      setQrvalue(getKlipAccessUrl('QR', request_key));\n    }\n\n    console.log(`response:${response}`);\n    let timerId = setInterval(() => {\n      axios.get(`https://a2a-api.klipwallet.com/v2/a2a/result?request_key=${request_key}`).then(res => {\n        if (res.data.result) {\n          console.log(`[Result] ${JSON.stringify(res.data.result)}`);\n          callback(res.data.result.klaytn_address);\n          clearInterval(timerId);\n          setQrvalue('DEFAULT');\n        }\n      });\n    }, 1000);\n  });\n};","map":{"version":3,"sources":["/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/src/api/UseKlip.ts"],"names":["axios","DONATION_CONTRACT_ADDRESS","A2P_API_PREPARE_URL","APP_NAME","isMobile","getKlipAccessUrl","method","request_key","refund","_campaignId","_userAddr","setQrvalue","callback","functionJson","executeContract","donateTocampaign","_amount","toString","setStateToRefund","createCampaign","_campaign_name","_campaign_description","_target_amount","txTo","functionJSON","value","params","post","bapp","name","type","transaction","to","abi","then","response","data","window","location","href","timerId","setInterval","get","res","result","console","log","JSON","stringify","clearInterval","getAddress","klaytn_address"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {DONATION_CONTRACT_ADDRESS} from '../constants/constants.cypress';\n\nconst A2P_API_PREPARE_URL = 'https://a2a-api.klipwallet.com/v2/a2a/prepare';\nconst APP_NAME = 'JOGAKBO';\n// const isMobile = window.screen.width >= 1280 ? false : true;\nconst isMobile = false;\n\nconst getKlipAccessUrl = (method: string, request_key: string) => {\n  if (method === 'QR') {\n    return `https://klipwallet.com/?target=/a2a?request_key=${request_key}`;\n  }\n  return `kakaotalk://klipwallet/open?url=https://klipwallet.com/?target=/a2a?request_key=${request_key}`;\n};\n\nexport const refund = async (\n  _campaignId: number,\n  _userAddr: string,\n  setQrvalue: Function,\n  callback: Function,\n) => {\n  const functionJson =\n    '{ \"constant\": false, \"inputs\": [ { \"name\": \"_campaignId\", \"type\": \"uint256\" }, { \"name\": \"_userAddr\", \"type\": \"address\" } ], \"name\": \"refund\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }';\n  executeContract(\n    DONATION_CONTRACT_ADDRESS,\n    functionJson,\n    '0',\n    `[\\\"${_campaignId}\\\",\\\"${_userAddr}\\\"]`,\n    setQrvalue,\n    callback,\n  );\n};\n\nexport const donateTocampaign = async (\n  _campaignId: number,\n  _amount: number,\n  setQrvalue: Function,\n  callback: Function,\n) => {\n  const functionJson =\n    '{ \"constant\": false, \"inputs\": [ { \"name\": \"_campaignId\", \"type\": \"uint256\" }, { \"name\": \"_amount\", \"type\": \"uint256\" } ], \"name\": \"donateTocampaign\", \"outputs\": [], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"function\" }';\n  executeContract(\n    DONATION_CONTRACT_ADDRESS,\n    functionJson,\n    (_amount * 10 ** 18).toString(),\n    `[\\\"${_campaignId}\\\",\\\"${_amount}\\\"]`,\n    setQrvalue,\n    callback,\n  );\n};\n\nexport const setStateToRefund = async (\n  _campaignId: number,\n  setQrvalue: Function,\n  callback: Function,\n) => {\n  const functionJson =\n    ' { \"constant\": false, \"inputs\": [ { \"name\": \"_campaignId\", \"type\": \"uint256\" } ], \"name\": \"setStateToRefund\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }';\n  executeContract(\n    DONATION_CONTRACT_ADDRESS,\n    functionJson,\n    '0',\n    `[\\\"${_campaignId}\\\"]`,\n    setQrvalue,\n    callback,\n  );\n};\n\nexport const createCampaign = async (\n  _campaign_name: string,\n  _campaign_description: string,\n  _target_amount: number,\n  setQrvalue: Function,\n  callback: Function,\n) => {\n  const functionJson =\n    ' { \"constant\": false, \"inputs\": [ { \"name\": \"_campaign_name\", \"type\": \"string\" }, { \"name\": \"_campaign_description\", \"type\": \"string\" }, { \"name\": \"_target_amount\", \"type\": \"uint256\" } ], \"name\": \"createCampaign\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }';\n  executeContract(\n    DONATION_CONTRACT_ADDRESS,\n    functionJson,\n    '0',\n    `[\\\"${_campaign_name}\\\",\\\"${_campaign_description}\\\",\\\"${_target_amount}\\\"]`,\n    setQrvalue,\n    callback,\n  );\n};\n\nexport const executeContract = (\n  txTo: string,\n  functionJSON: any,\n  value: string,\n  params: any,\n  setQrvalue: Function,\n  callback: Function,\n) => {\n  axios\n    .post(A2P_API_PREPARE_URL, {\n      bapp: {\n        name: APP_NAME,\n      },\n      type: 'execute_contract',\n      transaction: {\n        to: txTo,\n        abi: functionJSON,\n        value: value,\n        params: params,\n      },\n    })\n    .then(response => {\n      const {request_key} = response.data;\n      if (isMobile) {\n        window.location.href = getKlipAccessUrl('android', request_key);\n      } else {\n        setQrvalue(getKlipAccessUrl('QR', request_key));\n      }\n      let timerId = setInterval(() => {\n        axios\n          .get(\n            `https://a2a-api.klipwallet.com/v2/a2a/result?request_key=${request_key}`,\n          )\n          .then(res => {\n            if (res.data.result) {\n              console.log(`[result] ${JSON.stringify(res.data.result)}`);\n              callback(res.data.result);\n              clearInterval(timerId);\n              setQrvalue('DEFAULT');\n            }\n          });\n      }, 1000);\n    });\n};\n\nexport const getAddress = (setQrvalue: Function, callback: Function) => {\n  axios\n    .post(A2P_API_PREPARE_URL, {\n      bapp: {\n        name: APP_NAME,\n      },\n      type: 'auth',\n    })\n    .then(response => {\n      const {request_key} = response.data;\n      if (isMobile) {\n        window.location.href = getKlipAccessUrl('android', request_key);\n      } else {\n        setQrvalue(getKlipAccessUrl('QR', request_key));\n      }\n\n      console.log(`response:${response}`);\n\n      let timerId = setInterval(() => {\n        axios\n          .get(\n            `https://a2a-api.klipwallet.com/v2/a2a/result?request_key=${request_key}`,\n          )\n          .then(res => {\n            if (res.data.result) {\n              console.log(`[Result] ${JSON.stringify(res.data.result)}`);\n              callback(res.data.result.klaytn_address);\n              clearInterval(timerId);\n              setQrvalue('DEFAULT');\n            }\n          });\n      }, 1000);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}