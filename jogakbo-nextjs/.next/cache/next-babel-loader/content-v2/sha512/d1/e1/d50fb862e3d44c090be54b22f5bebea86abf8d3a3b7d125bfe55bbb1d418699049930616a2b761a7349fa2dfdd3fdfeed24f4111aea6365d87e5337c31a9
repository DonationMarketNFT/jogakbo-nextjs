{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { login } from \"./Login\";\nvar BASE_PATH = \"http://ec2-52-78-57-218.ap-northeast-2.compute.amazonaws.com:3000/account-wc\";\n// 모든 데이터 조회\nexport var getAccounts = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cb) {\n    var results;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"\".concat(BASE_PATH, \"/user_all\"));\n\n          case 2:\n            results = _context.sent;\n            cb(results.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAccounts(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // 특정 데이터 조회\n\nexport var getAccount = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n    var results;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.get(\"\".concat(BASE_PATH, \"/user/\").concat(id));\n\n          case 2:\n            results = _context2.sent;\n            return _context2.abrupt(\"return\", results.data);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getAccount(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // DB에 있는 주소라면 true, 없다면 false를 login에 저장\n\nexport var getUserAddress = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(addr, callback) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios.get(\"\".concat(BASE_PATH, \"/user/addr/\").concat(addr)).then(function (res) {\n              if (res.data) {\n                console.log(\"[Result] \".concat(JSON.stringify(res.data.result)));\n                callback(res.data.id);\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getUserAddress(_x3, _x4) {\n    return _ref3.apply(this, arguments);\n  };\n}(); // 첫 지갑연결 시 DB에 유저정보 추가\n\nexport var postAccount = function postAccount(_walletAddress, _walletKind, setMyAddress) {\n  var data = {\n    walletAddress: _walletAddress,\n    walletKind: _walletKind,\n    nickName: \"user\".concat(_walletAddress)\n  };\n  axios.post(\"\".concat(BASE_PATH, \"/create_user\"), data).then(function (res) {\n    // setMyAddress(_walletAddress);\n    console.log(\"유저등록\");\n    login(_walletAddress, setMyAddress);\n  })[\"catch\"](function (e) {\n    console.log(e); // setMyAddress(_walletAddress);\n\n    console.log(\"로그인성공\");\n    login(_walletAddress, setMyAddress);\n  });\n}; // 닉네임을 nickname로 수정\n\nexport var patchNickname = function patchNickname(id, nickname) {\n  axios.patch(\"\".concat(BASE_PATH, \"/user/updatenickname/\").concat(id), {\n    nickName: nickname\n  }).then(function (res) {\n    alert(\"정상적으로 변경되었습니다 :)\");\n    location.reload();\n  })[\"catch\"](function (e) {\n    return console.log(e);\n  });\n};\nexport var deleteAccount = function deleteAccount(id) {\n  axios[\"delete\"](\"\".concat(BASE_PATH, \"/user/delete/\").concat(id)).then(function (res) {\n    console.log(\"\".concat(id, \"\\uBC88\\uC9F8 \\uC720\\uC800\\uC0AD\\uC81C \\uC131\\uACF5\"));\n  })[\"catch\"](function (e) {\n    return console.log(e);\n  });\n};","map":null,"metadata":{},"sourceType":"module"}