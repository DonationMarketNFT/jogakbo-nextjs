{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\"; // 쿠키가 있다면 삭제하고 쿠키를 만들어주는 함수 + recoil에 주소 저장\n\nexport var login = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(myAddress, callback) {\n    var user, credentials;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"/api/user\");\n\n          case 2:\n            user = _context.sent;\n\n            // 쿠키 존재한다면 쿠키 삭제\n            if (user.data.address) {\n              axios.get(\"/api/auth/logout\");\n            } // 쿠키 생성\n\n\n            credentials = {\n              myAddress: myAddress\n            };\n            axios.post(\"/api/auth/login\", credentials);\n            callback(myAddress);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function login(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}(); // 쿠키 삭제 (로그아웃)\n\nexport var logout = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var user;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.get(\"/api/auth/logout\");\n\n          case 2:\n            user = _context2.sent;\n            console.log(user);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function logout() {\n    return _ref2.apply(this, arguments);\n  };\n}(); // 유저 정보 조회 + 주소 recoil 설정\n\nexport var getDataFromCookie = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(callback) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return axios.get(\"/api/user\").then(function (user) {\n              var user_key = user;\n\n              if (user.data.address) {\n                console.log(user_key);\n                callback(user.data.address);\n              } else {\n                console.log(user_key);\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getDataFromCookie(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var isValidToken = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(callback) {\n    var user;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return axios.get(\"/api/user\");\n\n          case 2:\n            user = _context4.sent;\n\n            if (user.data.address) {\n              callback(true);\n            }\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function isValidToken(_x4) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/src/api/Login.ts"],"names":["axios","login","myAddress","callback","get","user","data","address","credentials","post","logout","console","log","getDataFromCookie","then","user_key","isValidToken"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,IAAMC,KAAK;AAAA,sEAAG,iBAAOC,SAAP,EAA0BC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACAH,KAAK,CAACI,GAAN,CAAU,WAAV,CADA;;AAAA;AACbC,YAAAA,IADa;;AAEnB;AACA,gBAAIA,IAAI,CAACC,IAAL,CAAUC,OAAd,EAAuB;AACrBP,cAAAA,KAAK,CAACI,GAAN,CAAU,kBAAV;AACD,aALkB,CAMnB;;;AACMI,YAAAA,WAPa,GAOC;AAACN,cAAAA,SAAS,EAATA;AAAD,aAPD;AAQnBF,YAAAA,KAAK,CAACS,IAAN,CAAW,iBAAX,EAA8BD,WAA9B;AACAL,YAAAA,QAAQ,CAACD,SAAD,CAAR;;AATmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALD,KAAK;AAAA;AAAA;AAAA,GAAX,C,CAYP;;AACA,OAAO,IAAMS,MAAM;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDV,KAAK,CAACI,GAAN,CAAU,kBAAV,CADC;;AAAA;AACdC,YAAAA,IADc;AAEpBM,YAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;;AAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANK,MAAM;AAAA;AAAA;AAAA,GAAZ,C,CAKP;;AACA,OAAO,IAAMG,iBAAiB;AAAA,uEAAG,kBAAOV,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACzBH,KAAK,CAACI,GAAN,CAAU,WAAV,EAAuBU,IAAvB,CAA4B,UAAAT,IAAI,EAAI;AACxC,kBAAMU,QAAQ,GAAGV,IAAjB;;AACA,kBAAIA,IAAI,CAACC,IAAL,CAAUC,OAAd,EAAuB;AACrBI,gBAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACAZ,gBAAAA,QAAQ,CAACE,IAAI,CAACC,IAAL,CAAUC,OAAX,CAAR;AACD,eAHD,MAGO;AACLI,gBAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACD;AACF,aARK,CADyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBF,iBAAiB;AAAA;AAAA;AAAA,GAAvB;AAYP,OAAO,IAAMG,YAAY;AAAA,uEAAG,kBAAOb,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACPH,KAAK,CAACI,GAAN,CAAU,WAAV,CADO;;AAAA;AACpBC,YAAAA,IADoB;;AAE1B,gBAAIA,IAAI,CAACC,IAAL,CAAUC,OAAd,EAAuB;AACrBJ,cAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AAJyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZa,YAAY;AAAA;AAAA;AAAA,GAAlB","sourcesContent":["import axios from \"axios\";\n\n// 쿠키가 있다면 삭제하고 쿠키를 만들어주는 함수 + recoil에 주소 저장\nexport const login = async (myAddress: string, callback: Function) => {\n  const user = await axios.get(\"/api/user\");\n  // 쿠키 존재한다면 쿠키 삭제\n  if (user.data.address) {\n    axios.get(\"/api/auth/logout\");\n  }\n  // 쿠키 생성\n  const credentials = {myAddress};\n  axios.post(\"/api/auth/login\", credentials);\n  callback(myAddress);\n};\n\n// 쿠키 삭제 (로그아웃)\nexport const logout = async () => {\n  const user = await axios.get(\"/api/auth/logout\");\n  console.log(user);\n};\n\n// 유저 정보 조회 + 주소 recoil 설정\nexport const getDataFromCookie = async (callback: Function) => {\n  await axios.get(\"/api/user\").then(user => {\n    const user_key = user;\n    if (user.data.address) {\n      console.log(user_key);\n      callback(user.data.address);\n    } else {\n      console.log(user_key);\n    }\n  });\n};\n\nexport const isValidToken = async (callback: Function) => {\n  const user = await axios.get(\"/api/user\");\n  if (user.data.address) {\n    callback(true);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}