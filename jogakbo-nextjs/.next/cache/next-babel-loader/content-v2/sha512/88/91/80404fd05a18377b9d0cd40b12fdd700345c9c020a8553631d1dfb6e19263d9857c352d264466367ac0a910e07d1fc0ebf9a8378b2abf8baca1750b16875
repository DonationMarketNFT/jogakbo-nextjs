{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/src/pages/mypage.tsx\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { media } from \"../../styles/theme\";\nimport { getBalance, testOwnTokenId, testTokenId2Description, testTokenId2Name } from \"../api/UseCaver\";\nimport { modalPropsState, myAddressState, myBalanceState, qrValueState, showConnectWalletModalState, loginPlatformState } from \"../../atom\";\nimport { faClone } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ConnectWalletModal from \"../components/modals/ConnectWalletModal\";\nimport * as KlipAPI from \"../api/UseKlip\";\nimport Seo from \"../components/Seo\";\nconst Container = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__Container\",\n  componentId: \"sc-6wvjb6-0\"\n})([\"display:flex;flex-direction:column;padding:200px 0 70px 0;width:935px;margin:0 auto;\", \"{width:auto;padding:170px 0 100px 0;}\", \"{padding:100px 0 50px 0;}\"], media.tablet, media.mobile);\nconst ProfileContainer = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__ProfileContainer\",\n  componentId: \"sc-6wvjb6-1\"\n})([\"display:flex;flex-direction:column;align-items:center;margin-bottom:80px;\"]);\nconst ProfileImage = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__ProfileImage\",\n  componentId: \"sc-6wvjb6-2\"\n})([\"background-image:linear-gradient(rgba(0,0,0,0),rgba(0,0,0,0.5)),url(\", \");background-size:cover;background-position:center center;margin:10px;width:300px;height:300px;border-radius:50%;\", \"{width:220px;height:220px;}\", \"{width:200px;height:200px;}\"], props => props.bgphoto, media.tablet, media.mobile);\nconst ProfileInfoBox = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__ProfileInfoBox\",\n  componentId: \"sc-6wvjb6-3\"\n})([\"width:50%;margin:10px;\", \"{width:100%;padding:0 30px;}\"], media.mobile);\nconst ProfileInfo = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__ProfileInfo\",\n  componentId: \"sc-6wvjb6-4\"\n})([\"display:flex;position:relative;margin-top:20px;height:50px;label{position:absolute;top:-18px;left:5px;color:gray;}input{all:unset;height:40px;padding:0 10px;font-size:18px;width:100%;}&:first-child{input{background:\", \";border-radius:5px;color:white;\", \"{font-size:13px;}}}\"], props => props.theme.gray, media.mobile);\nconst WalletConnectButton = /*#__PURE__*/styled.button.withConfig({\n  displayName: \"mypage__WalletConnectButton\",\n  componentId: \"sc-6wvjb6-5\"\n})([\"background:\", \";width:100%;margin:5px 0;margin-bottom:30px;padding:20px;border-radius:10px;box-sizing:border-box;color:\", \";text-align:center;font-size:20px;cursor:pointer;\"], props => props.theme.gradient, props => props.theme.bgColor);\nconst Withdraw = /*#__PURE__*/styled.button.withConfig({\n  displayName: \"mypage__Withdraw\",\n  componentId: \"sc-6wvjb6-6\"\n})([\"width:50%;margin:0 auto;text-align:center;background:red;padding:10px 12px;border-radius:5px;color:white;font-size:12px;cursor:pointer;\"]);\nconst NFTContainer = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__NFTContainer\",\n  componentId: \"sc-6wvjb6-7\"\n})([\"position:relative;display:grid;grid-template-columns:repeat(4,1fr);gap:20px 15px;width:935px;padding:30px;margin:0 auto;margin-bottom:200px;h3{position:absolute;left:30px;}\", \"{width:auto;}\", \"{grid-template-columns:repeat(2,1fr);margin-bottom:100px;}\"], media.tablet, media.mobile);\nconst NFTBox = /*#__PURE__*/styled(motion.div).withConfig({\n  displayName: \"mypage__NFTBox\",\n  componentId: \"sc-6wvjb6-8\"\n})([\"background:pink;background-size:cover;background-position:center center;height:200px;border-radius:10px;\", \"{height:150px;}\", \"{height:130px;}\"], media.tablet, media[768]);\nconst CopyBox = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__CopyBox\",\n  componentId: \"sc-6wvjb6-9\"\n})([\"position:absolute;right:10px;top:10px;color:white;display:flex;justify-content:center;align-items:center;cursor:pointer;\"]);\nconst boxVariants = {\n  hover: {\n    scale: 1.05\n  }\n};\nconst DEFAULT_IMAGE = \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\";\n\nfunction Mypage() {\n  const {\n    0: profile,\n    1: setProfile\n  } = useState(DEFAULT_IMAGE);\n  const [myAddress, setMyAddress] = useRecoilState(myAddressState);\n  const [myBalance, setMyBalance] = useRecoilState(myBalanceState);\n  const [modalProps, setModalProps] = useRecoilState(modalPropsState);\n  const [qrvalue, setQrvalue] = useRecoilState(qrValueState); // const [showModal, setShowModal] = useRecoilState(showConnectWalletModalState);\n\n  const [connectWallet, setConnectWallet] = useRecoilState(showConnectWalletModalState);\n  const [loginPlatform, setLoginPlatform] = useRecoilState(loginPlatformState);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"\");\n  const copyLinkRef = useRef();\n  const {\n    0: ownToken,\n    1: setOwnToken\n  } = useState([]);\n\n  if (false) {\n    const uri = window.location.href;\n    console.log(uri);\n    console.log(loginPlatform);\n    console.log();\n  }\n\n  const getOwnTokenIds = async address => {\n    const ids = await testOwnTokenId(address);\n    return ids;\n  };\n\n  const getOwnTokenInfo = async () => {\n    if (myAddress !== \"0x00\") {\n      let ownTokenArray = [];\n      const ids = await getOwnTokenIds(myAddress);\n\n      for (let id of ids) {\n        const description = await testTokenId2Description(id);\n        const name = await testTokenId2Name(id);\n        ownTokenArray.push([id, name, description]);\n      }\n\n      setOwnToken(ownTokenArray);\n    }\n  };\n\n  const getUserData = async () => {\n    setModalProps({\n      title: \"Klip 지갑을 연동하시겠습니까?\",\n      onConfirm: () => {\n        KlipAPI.getAddress(setQrvalue, async address => {\n          setMyAddress(address);\n\n          const _balance = await getBalance(address);\n\n          setMyBalance(_balance);\n        });\n      }\n    });\n    setConnectWallet(true);\n  };\n\n  useEffect(() => {\n    getOwnTokenInfo();\n    getUserData();\n  }, []);\n\n  const copyAddress = () => {\n    copyLinkRef.current.focus();\n    copyLinkRef.current.select();\n    navigator.clipboard.writeText(copyLinkRef.current.value).then(() => {\n      alert(\"주소를 복사했습니다.\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Seo, {\n      title: \"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(ProfileContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ProfileImage, {\n          bgphoto: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProfileInfoBox, {\n          children: [myAddress !== \"0x00\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ProfileInfo, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"address\",\n                children: \"Wallet Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"address\",\n                readOnly: true,\n                type: \"text\",\n                value: myAddress,\n                ref: copyLinkRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CopyBox, {\n                onClick: copyAddress,\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faClone\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProfileInfo, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"balance\",\n                children: \"Wallet Balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"balance\",\n                readOnly: true,\n                type: \"text\",\n                value: `${myBalance} Klay`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), myAddress === \"0x00\" && /*#__PURE__*/_jsxDEV(WalletConnectButton, {\n            onClick: getUserData,\n            children: \"Connect Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NFTContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"My NFTs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), ownToken.map((data, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(NFTBox, {\n            variants: boxVariants,\n            whileHover: \"hover\",\n            children: data[1]\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)\n        }, void 0, false))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Withdraw, {\n        children: \"\\uD68C\\uC6D0 \\uD0C8\\uD1F4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), connectWallet && /*#__PURE__*/_jsxDEV(ConnectWalletModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n}\n\nexport default Mypage;","map":{"version":3,"sources":["/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/src/pages/mypage.tsx"],"names":["styled","motion","useEffect","useRef","useState","useRecoilState","media","getBalance","testOwnTokenId","testTokenId2Description","testTokenId2Name","modalPropsState","myAddressState","myBalanceState","qrValueState","showConnectWalletModalState","loginPlatformState","faClone","FontAwesomeIcon","ConnectWalletModal","KlipAPI","Seo","Container","div","tablet","mobile","ProfileContainer","ProfileImage","props","bgphoto","ProfileInfoBox","ProfileInfo","theme","gray","WalletConnectButton","button","gradient","bgColor","Withdraw","NFTContainer","NFTBox","CopyBox","boxVariants","hover","scale","DEFAULT_IMAGE","Mypage","profile","setProfile","myAddress","setMyAddress","myBalance","setMyBalance","modalProps","setModalProps","qrvalue","setQrvalue","connectWallet","setConnectWallet","loginPlatform","setLoginPlatform","show","setShow","value","setValue","copyLinkRef","ownToken","setOwnToken","uri","window","location","href","console","log","getOwnTokenIds","address","ids","getOwnTokenInfo","ownTokenArray","id","description","name","push","getUserData","title","onConfirm","getAddress","_balance","copyAddress","current","focus","select","navigator","clipboard","writeText","then","alert","map","data","i"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useRecoilState } from \"recoil\";\nimport { media } from \"../../styles/theme\";\nimport {\n  getBalance,\n  testOwnTokenId,\n  testTokenId2Description,\n  testTokenId2Name,\n} from \"../api/UseCaver\";\nimport {\n  modalPropsState,\n  myAddressState,\n  myBalanceState,\n  qrValueState,\n  showConnectWalletModalState,\n  loginPlatformState,\n  isLoginedState,\n} from \"../../atom\";\nimport { faClone } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ConnectWalletModal from \"../components/modals/ConnectWalletModal\";\nimport * as KlipAPI from \"../api/UseKlip\";\nimport Seo from \"../components/Seo\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 200px 0 70px 0;\n  width: 935px;\n  margin: 0 auto;\n  ${media.tablet} {\n    width: auto;\n    padding: 170px 0 100px 0;\n  }\n  ${media.mobile} {\n    padding: 100px 0 50px 0;\n  }\n`;\n\nconst ProfileContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 80px;\n`;\n\ninterface IProfile {\n  bgphoto: string;\n}\n\nconst ProfileImage = styled.div<IProfile>`\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.5)),\n    url(${(props) => props.bgphoto});\n  background-size: cover;\n  background-position: center center;\n  margin: 10px;\n  width: 300px;\n  height: 300px;\n  border-radius: 50%;\n  ${media.tablet} {\n    width: 220px;\n    height: 220px;\n  }\n  ${media.mobile} {\n    width: 200px;\n    height: 200px;\n  }\n`;\n\nconst ProfileInfoBox = styled.div`\n  width: 50%;\n  margin: 10px;\n  ${media.mobile} {\n    width: 100%;\n    padding: 0 30px;\n  }\n`;\n\nconst ProfileInfo = styled.div`\n  display: flex;\n  position: relative;\n  margin-top: 20px;\n  height: 50px;\n  label {\n    position: absolute;\n    top: -18px;\n    left: 5px;\n    color: gray;\n  }\n  input {\n    all: unset;\n    height: 40px;\n    padding: 0 10px;\n    font-size: 18px;\n    width: 100%;\n  }\n  &:first-child {\n    input {\n      background: ${(props) => props.theme.gray};\n      border-radius: 5px;\n      color: white;\n      ${media.mobile} {\n        font-size: 13px;\n      }\n    }\n  }\n`;\nconst WalletConnectButton = styled.button`\n  background: ${(props) => props.theme.gradient};\n  width: 100%;\n  margin: 5px 0;\n  margin-bottom: 30px;\n  padding: 20px;\n  border-radius: 10px;\n  box-sizing: border-box;\n  color: ${(props) => props.theme.bgColor};\n  text-align: center;\n  font-size: 20px;\n  cursor: pointer;\n`;\n\nconst Withdraw = styled.button`\n  width: 50%;\n  margin: 0 auto;\n  text-align: center;\n  background: red;\n  padding: 10px 12px;\n  border-radius: 5px;\n  color: white;\n  font-size: 12px;\n  cursor: pointer;\n`;\n\nconst NFTContainer = styled.div`\n  position: relative;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 20px 15px;\n  width: 935px;\n  padding: 30px;\n  margin: 0 auto;\n  margin-bottom: 200px;\n  h3 {\n    position: absolute;\n    left: 30px;\n  }\n  ${media.tablet} {\n    width: auto;\n  }\n  ${media.mobile} {\n    grid-template-columns: repeat(2, 1fr);\n    margin-bottom: 100px;\n  }\n`;\n\nconst NFTBox = styled(motion.div)`\n  background: pink;\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  border-radius: 10px;\n  ${media.tablet} {\n    height: 150px;\n  }\n  ${media[768]} {\n    height: 130px;\n  }\n`;\n\nconst CopyBox = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst boxVariants = { hover: { scale: 1.05 } };\n\nconst DEFAULT_IMAGE =\n  \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\";\n\nfunction Mypage() {\n  const [profile, setProfile] = useState(DEFAULT_IMAGE);\n  const [myAddress, setMyAddress] = useRecoilState(myAddressState);\n  const [myBalance, setMyBalance] = useRecoilState(myBalanceState);\n  const [modalProps, setModalProps] = useRecoilState(modalPropsState);\n  const [qrvalue, setQrvalue] = useRecoilState(qrValueState);\n  // const [showModal, setShowModal] = useRecoilState(showConnectWalletModalState);\n\n  const [connectWallet, setConnectWallet] = useRecoilState(\n    showConnectWalletModalState\n  );\n\n  const [loginPlatform, setLoginPlatform] = useRecoilState(loginPlatformState);\n\n  const [show, setShow] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const copyLinkRef = useRef<any>();\n  const [ownToken, setOwnToken] = useState<any[]>([]);\n\n  if (typeof window !== \"undefined\") {\n    const uri = window.location.href;\n    console.log(uri);\n    console.log(loginPlatform);\n    console.log();\n  }\n\n  const getOwnTokenIds = async (address: string) => {\n    const ids = await testOwnTokenId(address);\n    return ids;\n  };\n  const getOwnTokenInfo = async () => {\n    if (myAddress !== \"0x00\") {\n      let ownTokenArray = [];\n      const ids = await getOwnTokenIds(myAddress);\n      for (let id of ids) {\n        const description = await testTokenId2Description(id);\n        const name = await testTokenId2Name(id);\n        ownTokenArray.push([id, name, description]);\n      }\n      setOwnToken(ownTokenArray);\n    }\n  };\n\n  const getUserData = async () => {\n    setModalProps({\n      title: \"Klip 지갑을 연동하시겠습니까?\",\n      onConfirm: () => {\n        KlipAPI.getAddress(setQrvalue, async (address: string) => {\n          setMyAddress(address);\n          const _balance = await getBalance(address);\n          setMyBalance(_balance);\n        });\n      },\n    });\n    setConnectWallet(true);\n  };\n\n  useEffect(() => {\n    getOwnTokenInfo();\n    getUserData();\n  }, []);\n\n  const copyAddress = () => {\n    copyLinkRef.current.focus();\n    copyLinkRef.current.select();\n    navigator.clipboard.writeText(copyLinkRef.current.value).then(() => {\n      alert(\"주소를 복사했습니다.\");\n    });\n  };\n\n  return (\n    <>\n      <Seo title=\"마이페이지\" />\n      <Container>\n        <ProfileContainer>\n          <ProfileImage bgphoto={profile} />\n          <ProfileInfoBox>\n            {myAddress !== \"0x00\" && (\n              <>\n                <ProfileInfo>\n                  <label htmlFor=\"address\">Wallet Address</label>\n                  <input\n                    id=\"address\"\n                    readOnly\n                    type=\"text\"\n                    value={myAddress}\n                    ref={copyLinkRef}\n                  />\n                  <CopyBox onClick={copyAddress}>\n                    <FontAwesomeIcon icon={faClone} />\n                  </CopyBox>\n                </ProfileInfo>\n                <ProfileInfo>\n                  <label htmlFor=\"balance\">Wallet Balance</label>\n                  <input\n                    id=\"balance\"\n                    readOnly\n                    type=\"text\"\n                    value={`${myBalance} Klay`}\n                  />\n                </ProfileInfo>\n              </>\n            )}\n            {myAddress === \"0x00\" && (\n              <WalletConnectButton onClick={getUserData}>\n                Connect Wallet\n              </WalletConnectButton>\n            )}\n          </ProfileInfoBox>\n        </ProfileContainer>\n        <NFTContainer>\n          <h3>My NFTs</h3>\n          {ownToken.map((data, i) => (\n            <>\n              <NFTBox key={i} variants={boxVariants} whileHover=\"hover\">\n                {data[1]}\n              </NFTBox>\n            </>\n          ))}\n        </NFTContainer>\n        <Withdraw>회원 탈퇴</Withdraw>\n      </Container>\n      {connectWallet && <ConnectWalletModal />}\n    </>\n  );\n}\n\nexport default Mypage;\n"]},"metadata":{},"sourceType":"module"}