{"ast":null,"code":"import styled from \"styled-components\";\nimport { useRecoilState } from \"recoil\";\nimport { isLoginedState } from \"../../../atom\";\nvar Container = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"Naver__Container\",\n  componentId: \"sc-mfp29h-0\"\n})([\"display:flex;align-items:center;margin:10px 0;padding:0 15px;width:300px;height:45px;background:#03c75a;border-radius:5px;box-shadow:0 1px 2px 0 rgb(0 0 0 / 20%);cursor:pointer;\"]);\nvar Logo = /*#__PURE__*/styled.img.withConfig({\n  displayName: \"Naver__Logo\",\n  componentId: \"sc-mfp29h-1\"\n})([\"width:36px;\"]);\nvar Text = /*#__PURE__*/styled.h5.withConfig({\n  displayName: \"Naver__Text\",\n  componentId: \"sc-mfp29h-2\"\n})([\"width:100%;text-align:center;color:#fff;\"]);\nuseEffect(function () {\n  initializeNaverLogin(); // useEffect로 안하고 onclick하면 로그인배너아이콘 안뜸\n}, []);\n\nvar Naver = function Naver() {\n  // const [login, setLogin] = useRecoilState(isLoginedState);\n  // return (\n  //   <Container onClick={() => setLogin(true)}>\n  //     <Logo src=\"oauth/naver.svg\" />\n  //     <Text>네이버 로그인</Text>\n  //   </Container>\n  // );\n  var _window = window,\n      naver = _window.naver;\n  var naverLogin = new naver.LoginWithNaverId({\n    clientId: \"pwHyAdW1aYVUv1EVlAHI\",\n    callbackUrl: \"http://localhost:3003/mypage\",\n    isPopup: false\n    /* 팝업을 통한 연동처리 여부, true 면 팝업 */\n    ,\n    loginButton: {\n      color: \"green\",\n      type: 1,\n      height: 47\n    }\n    /* 로그인 버튼의 타입을 지정 */\n\n  });\n  naverLogin.init();\n};\n\n_c = Naver;\nexport default Naver;\n\nvar _c;\n\n$RefreshReg$(_c, \"Naver\");","map":{"version":3,"sources":["/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/src/components/OAuth/Naver.js"],"names":["styled","useRecoilState","isLoginedState","Container","div","Logo","img","Text","h5","useEffect","initializeNaverLogin","Naver","window","naver","naverLogin","LoginWithNaverId","clientId","callbackUrl","isPopup","loginButton","color","type","height","init"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAAQC,cAAR,QAA6B,QAA7B;AACA,SAAQC,cAAR,QAA6B,eAA7B;AAEA,IAAMC,SAAS,gBAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,yLAAf;AAaA,IAAMC,IAAI,gBAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,mBAAV;AAIA,IAAMC,IAAI,gBAAGP,MAAM,CAACQ,EAAV;AAAA;AAAA;AAAA,gDAAV;AAMAC,SAAS,CAAC,YAAM;AACdC,EAAAA,oBAAoB,GADN,CACU;AACzB,CAFQ,EAEN,EAFM,CAAT;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AAPkB,gBAQFC,MARE;AAAA,MAQXC,KARW,WAQXA,KARW;AAUlB,MAAMC,UAAU,GAAG,IAAID,KAAK,CAACE,gBAAV,CAA2B;AAC5CC,IAAAA,QAAQ,EAAE,sBADkC;AAE5CC,IAAAA,WAAW,EAAE,8BAF+B;AAG5CC,IAAAA,OAAO,EAAE;AAAM;AAH6B;AAI5CC,IAAAA,WAAW,EAAE;AACXC,MAAAA,KAAK,EAAE,OADI;AAEXC,MAAAA,IAAI,EAAE,CAFK;AAGXC,MAAAA,MAAM,EAAE;AAHG;AAIX;;AAR0C,GAA3B,CAAnB;AAWAR,EAAAA,UAAU,CAACS,IAAX;AACD,CAtBD;;KAAMZ,K;AAwBN,eAAeA,KAAf","sourcesContent":["import styled from \"styled-components\";\nimport {useRecoilState} from \"recoil\";\nimport {isLoginedState} from \"../../../atom\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 10px 0;\n  padding: 0 15px;\n  width: 300px;\n  height: 45px;\n  background: #03c75a;\n  border-radius: 5px;\n  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 20%);\n  cursor: pointer;\n`;\n\nconst Logo = styled.img`\n  width: 36px;\n`;\n\nconst Text = styled.h5`\n  width: 100%;\n  text-align: center;\n  color: #fff;\n`;\n\nuseEffect(() => {\n  initializeNaverLogin(); // useEffect로 안하고 onclick하면 로그인배너아이콘 안뜸\n}, []);\n\nconst Naver = () => {\n  // const [login, setLogin] = useRecoilState(isLoginedState);\n  // return (\n  //   <Container onClick={() => setLogin(true)}>\n  //     <Logo src=\"oauth/naver.svg\" />\n  //     <Text>네이버 로그인</Text>\n  //   </Container>\n  // );\n  const {naver} = window;\n\n  const naverLogin = new naver.LoginWithNaverId({\n    clientId: \"pwHyAdW1aYVUv1EVlAHI\",\n    callbackUrl: \"http://localhost:3003/mypage\",\n    isPopup: false /* 팝업을 통한 연동처리 여부, true 면 팝업 */,\n    loginButton: {\n      color: \"green\",\n      type: 1,\n      height: 47,\n    } /* 로그인 버튼의 타입을 지정 */,\n  });\n\n  naverLogin.init();\n};\n\nexport default Naver;\n"]},"metadata":{},"sourceType":"module"}