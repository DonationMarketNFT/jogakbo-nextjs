{"ast":null,"code":"import Caver, { AbiItem } from \"caver-js\";\nimport { ACCESS_KEY_ID, CHAIN_ID, JOGAKBO_CONTRACT_ADDRESS, NFT_CONTRACT_ADDRESS, SECRET_ACCRESS_KEY } from \"../constants/constants.baobab\";\nimport JOGAKBOABI from \"../abi/JogakboABI.json\";\nimport NFTABI from \"../abi/NftABI.json\";\nconst option = {\n  headers: [{\n    name: \"Authorization\",\n    value: \"Basic \" + Buffer.from(ACCESS_KEY_ID + \":\" + SECRET_ACCRESS_KEY).toString(\"base64\")\n  }, {\n    name: \"x-chain-id\",\n    value: CHAIN_ID\n  }]\n};\nconst caver = new Caver(new Caver.providers.HttpProvider( // \"https://node-api.klaytnapi.com/v1/klaytn\",\n\"https://api.baobab.klaytn.net:8651/\", option));\nexport const rs = async () => {\n  await caver.klay.sendTransaction({\n    type: \"VALUE_TRANSFER\",\n    from: \"0xc72af0d3c40d5E95e3424b251ceA0cD81e230Dc1\",\n    to: \"0xA52c3f53F087B3445190ADc0B038Bd78D8110eDa\",\n    gas: \"300000\",\n    value: caver.utils.toPeb(\"1\", \"KLAY\")\n  });\n};\nexport const JogakboContract = new caver.contract(JOGAKBOABI, JOGAKBO_CONTRACT_ADDRESS); // 테스트 완료\n\nexport const getCampaignNumber = async () => {\n  const number = await JogakboContract.methods.CampaignNumber().call();\n  console.log(number);\n  return number;\n};\nexport const createCampaign = async (_campaign_address, _target_amount, _campaign_ID) => {\n  const options = {\n    from: _campaign_address\n  };\n  const create = await JogakboContract.methods.createCampaign(_campaign_address, _target_amount, _campaign_ID).sign(options).then(console.log);\n  return create;\n}; // export const campaignList = async () => {\n//   const number = await JogakboContract.methods.campaignNumber().call();\n//   const lists = [];\n//   for (let i = 0; i < number; i++) {\n//     const list = await JogakboContract.methods.campaignList([i]).call();\n//     lists.push(list);\n//   }\n//   return lists;\n// };\n// export const testOwnTokenId = async address => {\n//   const ids = await JogakboContract.methods.tokenIds(address).call();\n//   return ids;\n// };\n// export const testTokenId2Description = async id => {\n//   const des = await JogakboContract.methods.tokenDescription(id).call();\n//   return des;\n// };\n// export const testTokenId2Name = async id => {\n//   const des = await JogakboContract.methods.tokenName(id).call();\n//   return des;\n// };\n// export const testCampaignList = async () => {\n//   const Number = await JogakboContract.methods.CampaignNumber().call();\n//   const lists = [];\n//   for (let i = 0; i < Number; i++) {\n//     const list = await JogakboContract.methods.campaignList([i]).call();\n//     lists.push(list);\n//   }\n//   return lists;\n// };\n// export const testCampaignNumber = async () => {\n//   const Number = await JogakboContract.methods.CampaignNumber().call();\n//   console.log(`number:${Number}`);\n//   return Number;\n// };\n// klip 잔고 조회시 메인넷 chain_id 필요\n\nexport const getBalance = address => {\n  return caver.rpc.klay.getBalance(address).then(response => {\n    const balance = caver.utils.convertFromPeb(caver.utils.hexToNumberString(response), \"KLAY\");\n    return balance;\n  });\n};","map":null,"metadata":{},"sourceType":"module"}