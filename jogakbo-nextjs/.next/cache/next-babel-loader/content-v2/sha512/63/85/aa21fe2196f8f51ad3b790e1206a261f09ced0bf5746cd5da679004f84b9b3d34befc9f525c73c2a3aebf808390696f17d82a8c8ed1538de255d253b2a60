{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/src/components/OAuth/Kakao.js\";\nimport { useRouter } from \"next/dist/client/router\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport { isLoginedState, loginPlatformState } from \"../../../atom\";\nimport React, { useState, useEffect } from \"react\";\nimport KakaoLogin from \"react-kakao-login\";\nimport axios from \"axios\";\nconst Container = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"Kakao__Container\",\n  componentId: \"sc-gnl4if-0\"\n})([\"display:flex;align-items:center;margin:10px 0;padding:0 15px;width:300px;height:45px;background:#fee500;border-radius:5px;box-shadow:0 1px 2px 0 rgb(0 0 0 / 20%);cursor:pointer;\"]);\nconst Logo = /*#__PURE__*/styled.img.withConfig({\n  displayName: \"Kakao__Logo\",\n  componentId: \"sc-gnl4if-1\"\n})([\"width:36px;\"]);\nconst Text = /*#__PURE__*/styled.h5.withConfig({\n  displayName: \"Kakao__Text\",\n  componentId: \"sc-gnl4if-2\"\n})([\"width:100%;text-align:center;opacity:85%;\"]);\n\nconst Kakao = () => {\n  const JAVASCRIPT_API_KEY = \"000d0aaca2d1ced4767b50abca25af3c\";\n  const REST_API_KEY = \"87ec2852b1a816aba24acbd1e66aa2fe\"; //TODO: this api key should be encrypted.\n\n  const REDIRECT_URI = \"http://localhost:3003/mypage\";\n  const KAKAO_AUTH_URL = `https://kauth.kakao.com/oauth/authorize?client_id=${REST_API_KEY}&redirect_uri=${REDIRECT_URI}&response_type=code`;\n  const router = useRouter();\n  const [login, setLogin] = useRecoilState(isLoginedState);\n  const [loginPlatform, setLoginPlatform] = useRecoilState(loginPlatformState);\n  const platform_name = \"KAKAO\";\n\n  async function findEmail(email) {\n    console.log(email);\n\n    try {\n      const response = await axios.get(`http://localhost:3000/account/user/${email}`);\n      console.log(response);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  useEffect(() => {\n    if (false) {\n      window.Kakao.init(JAVASCRIPT_API_KEY);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(KakaoLogin, {\n    token: JAVASCRIPT_API_KEY,\n    onSuccess: err => {\n      console.log(\"로그인성공\", err);\n      window.Kakao.Auth.setAccessToken(err.response.access_token);\n      console.log(`is set?: ${window.Kakao.Auth.getAccessToken()}`);\n      console.log(\"닉네임\");\n      console.log(err.profile.kakao_account.profile.nickname);\n      console.log(\"email\");\n      console.log(err.profile.kakao_account.email);\n      findEmail(err.profile.kakao_account.email);\n    } // 성공 시 실행할 함수\n    ,\n    onFail: err => {\n      console.log(\"로그인실패\", err);\n    },\n    onLogout: () => {\n      console.log(\"로그아웃\");\n    },\n    render: ({\n      onClick\n    }) => /*#__PURE__*/_jsxDEV(Container, {\n      onClick: e => {\n        setLogin(true);\n        setLoginPlatform(platform_name);\n        e.preventDefault();\n        onClick();\n      },\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        src: \"oauth/kakao.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        children: \"\\uCE74\\uCE74\\uC624 \\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Kakao;","map":{"version":3,"sources":["/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/src/components/OAuth/Kakao.js"],"names":["useRouter","useRecoilState","useRecoilValue","styled","isLoginedState","loginPlatformState","React","useState","useEffect","KakaoLogin","axios","Container","div","Logo","img","Text","h5","Kakao","JAVASCRIPT_API_KEY","REST_API_KEY","REDIRECT_URI","KAKAO_AUTH_URL","router","login","setLogin","loginPlatform","setLoginPlatform","platform_name","findEmail","email","console","log","response","get","err","window","init","Auth","setAccessToken","access_token","getAccessToken","profile","kakao_account","nickname","onClick","e","preventDefault"],"mappings":"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","sourcesContent":["import {useRouter} from \"next/dist/client/router\";\nimport {useRecoilState, useRecoilValue} from \"recoil\";\nimport styled from \"styled-components\";\nimport {isLoginedState, loginPlatformState} from \"../../../atom\";\nimport React, {useState, useEffect} from \"react\";\nimport KakaoLogin from \"react-kakao-login\";\nimport axios from \"axios\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 10px 0;\n  padding: 0 15px;\n  width: 300px;\n  height: 45px;\n  background: #fee500;\n  border-radius: 5px;\n  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 20%);\n  cursor: pointer;\n`;\n\nconst Logo = styled.img`\n  width: 36px;\n`;\n\nconst Text = styled.h5`\n  width: 100%;\n  text-align: center;\n  opacity: 85%;\n`;\n\nconst Kakao = () => {\n  const JAVASCRIPT_API_KEY = \"000d0aaca2d1ced4767b50abca25af3c\";\n  const REST_API_KEY = \"87ec2852b1a816aba24acbd1e66aa2fe\";\n  //TODO: this api key should be encrypted.\n  const REDIRECT_URI = \"http://localhost:3003/mypage\";\n\n  const KAKAO_AUTH_URL = `https://kauth.kakao.com/oauth/authorize?client_id=${REST_API_KEY}&redirect_uri=${REDIRECT_URI}&response_type=code`;\n  const router = useRouter();\n  const [login, setLogin] = useRecoilState(isLoginedState);\n  const [loginPlatform, setLoginPlatform] = useRecoilState(loginPlatformState);\n  const platform_name = \"KAKAO\";\n\n  async function findEmail(email) {\n    console.log(email);\n    try {\n      const response = await axios.get(\n        `http://localhost:3000/account/user/${email}`,\n      );\n      console.log(response);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      window.Kakao.init(JAVASCRIPT_API_KEY);\n    }\n  }, []);\n\n  return (\n    <KakaoLogin\n      token={JAVASCRIPT_API_KEY}\n      onSuccess={err => {\n        console.log(\"로그인성공\", err);\n        window.Kakao.Auth.setAccessToken(err.response.access_token);\n        console.log(`is set?: ${window.Kakao.Auth.getAccessToken()}`);\n        console.log(\"닉네임\");\n        console.log(err.profile.kakao_account.profile.nickname);\n        console.log(\"email\");\n        console.log(err.profile.kakao_account.email);\n        findEmail(err.profile.kakao_account.email);\n      }} // 성공 시 실행할 함수\n      onFail={err => {\n        console.log(\"로그인실패\", err);\n      }}\n      onLogout={() => {\n        console.log(\"로그아웃\");\n      }}\n      render={({onClick}) => (\n        <Container\n          onClick={e => {\n            setLogin(true);\n            setLoginPlatform(platform_name);\n            e.preventDefault();\n            onClick();\n          }}\n        >\n          <Logo src=\"oauth/kakao.svg\" />\n          <Text>카카오 로그인</Text>\n        </Container>\n      )}\n    ></KakaoLogin>\n  );\n};\n\nexport default Kakao;\n"]},"metadata":{},"sourceType":"module"}