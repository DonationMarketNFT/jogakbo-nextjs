{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nvar BASE_PATH = \"http://localhost:3000/account-wc\";\n// 모든 데이터 조회\nexport var getAccount = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var results;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"\".concat(BASE_PATH, \"/user_all\"));\n\n          case 2:\n            results = _context.sent;\n            return _context.abrupt(\"return\", results.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAccount() {\n    return _ref.apply(this, arguments);\n  };\n}(); // 첫 지갑연결 시 DB에 유저정보 추가\n\nexport var postAccount = function postAccount(_walletAddress, _walletKind) {\n  var data = {\n    walletAddress: _walletAddress,\n    walletKind: _walletKind,\n    nickName: \"user\".concat(_walletAddress)\n  };\n  axios.post(\"\".concat(BASE_PATH, \"/create_user\"), data).then(function (res) {\n    return alert(\"정상적으로 제출되었습니다 :)\");\n  })[\"catch\"](function (e) {\n    return console.log(e);\n  });\n};","map":{"version":3,"sources":["/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/src/api/accountWc.ts"],"names":["axios","BASE_PATH","getAccount","get","results","data","postAccount","_walletAddress","_walletKind","walletAddress","walletKind","nickName","post","then","res","alert","e","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,SAAS,GAAG,kCAAlB;AAQA;AACA,OAAO,IAAMC,UAAU;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFF,KAAK,CAACG,GAAN,WAAaF,SAAb,eADE;;AAAA;AAClBG,YAAAA,OADkB;AAAA,6CAEjBA,OAAO,CAACC,IAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVH,UAAU;AAAA;AAAA;AAAA,GAAhB,C,CAKP;;AACA,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,cAAD,EAAyBC,WAAzB,EAAiD;AAC1E,MAAMH,IAAgB,GAAG;AACvBI,IAAAA,aAAa,EAAEF,cADQ;AAEvBG,IAAAA,UAAU,EAAEF,WAFW;AAGvBG,IAAAA,QAAQ,gBAASJ,cAAT;AAHe,GAAzB;AAKAP,EAAAA,KAAK,CACFY,IADH,WACWX,SADX,mBACoCI,IADpC,EAEGQ,IAFH,CAEQ,UAAAC,GAAG;AAAA,WAAIC,KAAK,CAAC,kBAAD,CAAT;AAAA,GAFX,WAGS,UAAAC,CAAC;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAJ;AAAA,GAHV;AAID,CAVM","sourcesContent":["import axios from \"axios\";\n\nconst BASE_PATH = \"http://localhost:3000/account-wc\";\n\ninterface IAccountWc {\n  walletAddress: string;\n  walletKind: string;\n  nickName: string;\n}\n\n// 모든 데이터 조회\nexport const getAccount = async () => {\n  const results = await axios.get(`${BASE_PATH}/user_all`);\n  return results.data;\n};\n\n// 첫 지갑연결 시 DB에 유저정보 추가\nexport const postAccount = (_walletAddress: string, _walletKind: string) => {\n  const data: IAccountWc = {\n    walletAddress: _walletAddress,\n    walletKind: _walletKind,\n    nickName: `user${_walletAddress}`,\n  };\n  axios\n    .post(`${BASE_PATH}/create_user`, data)\n    .then(res => alert(\"정상적으로 제출되었습니다 :)\"))\n    .catch(e => console.log(e));\n};\n"]},"metadata":{},"sourceType":"module"}