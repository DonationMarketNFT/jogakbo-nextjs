{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/styles/Provider.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport useDarkMode from \"use-dark-mode\";\nimport { darkTheme, lightTheme } from \"./theme\";\n\nvar Provider = function Provider(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var darkMode = useDarkMode(false);\n  var theme = darkMode.value ? darkTheme : lightTheme;\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Provider, \"TdsQsS0d3xw/utbVL1x4DuOKMeA=\", false, function () {\n  return [useDarkMode];\n});\n\n_c = Provider;\nexport default Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/styles/Provider.tsx"],"names":["React","ThemeProvider","useDarkMode","darkTheme","lightTheme","Provider","children","darkMode","theme","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,SAAR,EAAmBC,UAAnB,QAAoC,SAApC;;AAMA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAuB;AAAA;;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AACtC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,KAAD,CAA5B;AACA,MAAMM,KAAK,GAAGD,QAAQ,CAACE,KAAT,GAAiBN,SAAjB,GAA6BC,UAA3C;AACA,sBAAO,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEI,KAAtB;AAAA,cAA8BF;AAA9B;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAJD;;GAAMD,Q;UACaH,W;;;KADbG,Q;AAMN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport {ThemeProvider} from \"styled-components\";\nimport useDarkMode from \"use-dark-mode\";\nimport {darkTheme, lightTheme} from \"./theme\";\n\ninterface Props {\n  children: JSX.Element[] | JSX.Element;\n}\n\nconst Provider = ({children}: Props) => {\n  const darkMode = useDarkMode(false);\n  const theme = darkMode.value ? darkTheme : lightTheme;\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}