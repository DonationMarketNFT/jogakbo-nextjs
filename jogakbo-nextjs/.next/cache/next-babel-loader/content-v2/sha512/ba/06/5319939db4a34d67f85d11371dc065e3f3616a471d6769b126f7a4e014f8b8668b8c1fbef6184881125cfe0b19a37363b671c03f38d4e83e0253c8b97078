{"ast":null,"code":"// 1시간 후에는 tokenId가 만료되므로 데이터에 액세스하거나 사용자를 인증하는 데 사용할 수 없음\n// 새로운 tokenId를 생성해야함\nexport const refreshTokenSetup = res => {\n  let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000; //res.tokenObj.expires_in = 3600\n\n  const refreshToken = async () => {\n    const newAuthRes = await res.reloadAuthResponese();\n    refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n    console.log(\"newAuthRes:\", newAuthRes);\n    console.log(\"new auth Token\", newAuthRes.id_token); // Setup the other timer after the first one\n\n    setTimeout(refreshToken, refreshTiming);\n  }; // Setup first refresh timer\n\n\n  setTimeout(refreshToken, refreshTiming);\n};","map":{"version":3,"sources":["/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/src/components/utils/refreshTokenSetup.js"],"names":["refreshTokenSetup","res","refreshTiming","tokenObj","expires_in","refreshToken","newAuthRes","reloadAuthResponese","console","log","id_token","setTimeout"],"mappings":"AAAA;AACA;AAEA,OAAO,MAAMA,iBAAiB,GAAGC,GAAG,IAAI;AACtC,MAAIC,aAAa,GAAG,CAACD,GAAG,CAACE,QAAJ,CAAaC,UAAb,IAA2B,OAAO,IAAI,EAAvC,IAA6C,IAAjE,CADsC,CAEtC;;AAEA,QAAMC,YAAY,GAAG,YAAY;AAC/B,UAAMC,UAAU,GAAG,MAAML,GAAG,CAACM,mBAAJ,EAAzB;AACAL,IAAAA,aAAa,GAAG,CAACI,UAAU,CAACF,UAAX,IAAyB,OAAO,IAAI,EAArC,IAA2C,IAA3D;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,UAA3B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,UAAU,CAACI,QAAzC,EAJ+B,CAM/B;;AACAC,IAAAA,UAAU,CAACN,YAAD,EAAeH,aAAf,CAAV;AACD,GARD,CAJsC,CAatC;;;AACAS,EAAAA,UAAU,CAACN,YAAD,EAAeH,aAAf,CAAV;AACD,CAfM","sourcesContent":["// 1시간 후에는 tokenId가 만료되므로 데이터에 액세스하거나 사용자를 인증하는 데 사용할 수 없음\n// 새로운 tokenId를 생성해야함\n\nexport const refreshTokenSetup = res => {\n  let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n  //res.tokenObj.expires_in = 3600\n\n  const refreshToken = async () => {\n    const newAuthRes = await res.reloadAuthResponese();\n    refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n    console.log(\"newAuthRes:\", newAuthRes);\n    console.log(\"new auth Token\", newAuthRes.id_token);\n\n    // Setup the other timer after the first one\n    setTimeout(refreshToken, refreshTiming);\n  };\n  // Setup first refresh timer\n  setTimeout(refreshToken, refreshTiming);\n};\n"]},"metadata":{},"sourceType":"module"}