{"ast":null,"code":"import { atom } from \"recoil\"; // interface Klaytn {\n//   on: (eventName: string, callback: () => void) => void;\n//   enable: () => Promise<Array<string>>;\n//   selectedAddress: string;\n//   networkVersion: number;\n//   publicConfigStore: Store;\n// }\n// interface State {\n//   isEnabled: boolean;\n//   isUnlocked: boolean;\n//   networkVersion: number;\n//   onboardingcomplete: boolean;\n// }\n// interface Store {\n//   subscribe: (callback: () => void) => void;\n//   getState: () => State;\n// }\n// declare global {\n//   interface Window {\n//     klaytn: any;\n//   }\n// }\n// let kly;\n// if (typeof window !== \"undefined\") {\n//   kly = window.klaytn;\n// }\n// const caverState = atom<any>({\n//   key: \"caver\",\n//   default: kly,\n// });\n\nvar showSignInModalState = atom({\n  key: \"signInKey\",\n  \"default\": false\n});\nvar showConnectWalletModalState = atom({\n  key: \"connectWalletKey\",\n  \"default\": false\n});\nvar showCategoryModalState = atom({\n  key: \"showCategoryModalState\",\n  \"default\": false\n});\nvar isLoginedState = atom({\n  key: \"loginKey\",\n  \"default\": false\n});\nvar myAddressState = atom({\n  key: \"myAddressKey\",\n  // default: \"0xD216a6beBdDECa9b862c1423b31CFA5188E5cB3C\",\n  \"default\": \"0x00\"\n});\nvar myBalanceState = atom({\n  key: \"myBalanceKey\",\n  \"default\": \"0\"\n});\nvar qrValueState = atom({\n  key: \"qrcodeKey\",\n  \"default\": \"DEFAULT\"\n});\nvar modalPropsState = atom({\n  key: \"modalPropsKey\",\n  \"default\": {\n    title: \"MODAL\",\n    onConfirm: function onConfirm() {}\n  }\n});\nvar subMenuState = atom({\n  key: \"subMenuState\",\n  \"default\": false\n});\nvar VerifyModalState = atom({\n  key: \"verifyModalState\",\n  \"default\": false\n});\nvar loginPlatformState = atom({\n  key: \"loginPlatformState\",\n  \"default\": \"None\"\n});\nexport { showSignInModalState, showConnectWalletModalState, showCategoryModalState, isLoginedState, myAddressState, myBalanceState, qrValueState, modalPropsState, subMenuState, VerifyModalState, loginPlatformState };","map":{"version":3,"sources":["/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/atom.ts"],"names":["atom","showSignInModalState","key","showConnectWalletModalState","showCategoryModalState","isLoginedState","myAddressState","myBalanceState","qrValueState","modalPropsState","title","onConfirm","subMenuState","VerifyModalState","loginPlatformState"],"mappings":"AACA,SAAQA,IAAR,QAAmB,QAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,IAAMC,oBAAoB,GAAGD,IAAI,CAAU;AACzCE,EAAAA,GAAG,EAAE,WADoC;AAEzC,aAAS;AAFgC,CAAV,CAAjC;AAKA,IAAMC,2BAA2B,GAAGH,IAAI,CAAU;AAChDE,EAAAA,GAAG,EAAE,kBAD2C;AAEhD,aAAS;AAFuC,CAAV,CAAxC;AAKA,IAAME,sBAAsB,GAAGJ,IAAI,CAAU;AAC3CE,EAAAA,GAAG,EAAE,wBADsC;AAE3C,aAAS;AAFkC,CAAV,CAAnC;AAKA,IAAMG,cAAc,GAAGL,IAAI,CAAU;AACnCE,EAAAA,GAAG,EAAE,UAD8B;AAEnC,aAAS;AAF0B,CAAV,CAA3B;AAKA,IAAMI,cAAc,GAAGN,IAAI,CAAS;AAClCE,EAAAA,GAAG,EAAE,cAD6B;AAElC;AACA,aAAS;AAHyB,CAAT,CAA3B;AAMA,IAAMK,cAAc,GAAGP,IAAI,CAAS;AAClCE,EAAAA,GAAG,EAAE,cAD6B;AAElC,aAAS;AAFyB,CAAT,CAA3B;AAKA,IAAMM,YAAY,GAAGR,IAAI,CAAS;AAChCE,EAAAA,GAAG,EAAE,WAD2B;AAEhC,aAAS;AAFuB,CAAT,CAAzB;AAUA,IAAMO,eAAe,GAAGT,IAAI,CAAmB;AAC7CE,EAAAA,GAAG,EAAE,eADwC;AAE7C,aAAS;AAACQ,IAAAA,KAAK,EAAE,OAAR;AAAiBC,IAAAA,SAAS,EAAE,qBAAM,CAAE;AAApC;AAFoC,CAAnB,CAA5B;AAKA,IAAMC,YAAY,GAAGZ,IAAI,CAAU;AACjCE,EAAAA,GAAG,EAAE,cAD4B;AAEjC,aAAS;AAFwB,CAAV,CAAzB;AAKA,IAAMW,gBAAgB,GAAGb,IAAI,CAAU;AACrCE,EAAAA,GAAG,EAAE,kBADgC;AAErC,aAAS;AAF4B,CAAV,CAA7B;AAKA,IAAMY,kBAAkB,GAAGd,IAAI,CAAS;AACtCE,EAAAA,GAAG,EAAE,oBADiC;AAEtC,aAAS;AAF6B,CAAT,CAA/B;AAKA,SACED,oBADF,EAEEE,2BAFF,EAGEC,sBAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,cANF,EAOEC,YAPF,EAQEC,eARF,EASEG,YATF,EAUEC,gBAVF,EAWEC,kBAXF","sourcesContent":["import Caver from \"caver-js\";\nimport {atom} from \"recoil\";\n\n// interface Klaytn {\n//   on: (eventName: string, callback: () => void) => void;\n//   enable: () => Promise<Array<string>>;\n//   selectedAddress: string;\n//   networkVersion: number;\n//   publicConfigStore: Store;\n// }\n\n// interface State {\n//   isEnabled: boolean;\n//   isUnlocked: boolean;\n//   networkVersion: number;\n//   onboardingcomplete: boolean;\n// }\n\n// interface Store {\n//   subscribe: (callback: () => void) => void;\n//   getState: () => State;\n// }\n\n// declare global {\n//   interface Window {\n//     klaytn: any;\n//   }\n// }\n\n// let kly;\n// if (typeof window !== \"undefined\") {\n//   kly = window.klaytn;\n// }\n\n// const caverState = atom<any>({\n//   key: \"caver\",\n//   default: kly,\n// });\n\nconst showSignInModalState = atom<boolean>({\n  key: \"signInKey\",\n  default: false,\n});\n\nconst showConnectWalletModalState = atom<boolean>({\n  key: \"connectWalletKey\",\n  default: false,\n});\n\nconst showCategoryModalState = atom<boolean>({\n  key: \"showCategoryModalState\",\n  default: false,\n});\n\nconst isLoginedState = atom<boolean>({\n  key: \"loginKey\",\n  default: false,\n});\n\nconst myAddressState = atom<string>({\n  key: \"myAddressKey\",\n  // default: \"0xD216a6beBdDECa9b862c1423b31CFA5188E5cB3C\",\n  default: \"0x00\",\n});\n\nconst myBalanceState = atom<string>({\n  key: \"myBalanceKey\",\n  default: \"0\",\n});\n\nconst qrValueState = atom<string>({\n  key: \"qrcodeKey\",\n  default: \"DEFAULT\",\n});\n\ninterface IModalPropsState {\n  title: string;\n  onConfirm: Function;\n}\n\nconst modalPropsState = atom<IModalPropsState>({\n  key: \"modalPropsKey\",\n  default: {title: \"MODAL\", onConfirm: () => {}},\n});\n\nconst subMenuState = atom<boolean>({\n  key: \"subMenuState\",\n  default: false,\n});\n\nconst VerifyModalState = atom<boolean>({\n  key: \"verifyModalState\",\n  default: false,\n});\n\nconst loginPlatformState = atom<string>({\n  key: \"loginPlatformState\",\n  default: \"None\",\n});\n\nexport {\n  showSignInModalState,\n  showConnectWalletModalState,\n  showCategoryModalState,\n  isLoginedState,\n  myAddressState,\n  myBalanceState,\n  qrValueState,\n  modalPropsState,\n  subMenuState,\n  VerifyModalState,\n  loginPlatformState,\n};\n"]},"metadata":{},"sourceType":"module"}