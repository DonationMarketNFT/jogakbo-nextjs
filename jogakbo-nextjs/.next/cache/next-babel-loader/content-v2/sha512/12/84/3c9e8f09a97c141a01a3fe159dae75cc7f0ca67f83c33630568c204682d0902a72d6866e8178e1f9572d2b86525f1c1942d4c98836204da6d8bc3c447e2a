{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { JOGAKBO_CONTRACT_ADDRESS } from \"../constants/constants.baobab\";\nvar A2P_API_PREPARE_URL = \"https://a2a-api.klipwallet.com/v2/a2a/prepare\";\nvar APP_NAME = \"JOGAKBO\"; // const isMobile = window.screen.width >= 1280 ? false : true;\n\nvar isMobile = false;\n\nvar getKlipAccessUrl = function getKlipAccessUrl(method, request_key) {\n  if (method === \"QR\") {\n    return \"https://klipwallet.com/?target=/a2a?request_key=\".concat(request_key);\n  }\n\n  return \"kakaotalk://klipwallet/open?url=https://klipwallet.com/?target=/a2a?request_key=\".concat(request_key);\n};\n\nexport var refund = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_campaignId, _userAddr, setQrvalue, callback) {\n    var functionJson;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            functionJson = '{ \"constant\": false, \"inputs\": [ { \"name\": \"_campaignId\", \"type\": \"uint256\" }, { \"name\": \"_userAddr\", \"type\": \"address\" } ], \"name\": \"refund\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }';\n            executeContract(JOGAKBO_CONTRACT_ADDRESS, functionJson, \"0\", \"[\\\"\".concat(_campaignId, \"\\\",\\\"\").concat(_userAddr, \"\\\"]\"), setQrvalue, callback);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function refund(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var donateTocampaign = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_campaignId, _amount, setQrvalue, callback) {\n    var functionJson;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            functionJson = '{ \"constant\": false, \"inputs\": [ { \"name\": \"_campaignId\", \"type\": \"uint256\" }, { \"name\": \"_amount\", \"type\": \"uint256\" } ], \"name\": \"donateTocampaign\", \"outputs\": [], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"function\" }';\n            executeContract(JOGAKBO_CONTRACT_ADDRESS, functionJson, (_amount * Math.pow(10, 18)).toString(), \"[\\\"\".concat(_campaignId, \"\\\",\\\"\").concat(_amount, \"\\\"]\"), setQrvalue, callback);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function donateTocampaign(_x5, _x6, _x7, _x8) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var setStateToRefund = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_campaignId, setQrvalue, callback) {\n    var functionJson;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            functionJson = ' { \"constant\": false, \"inputs\": [ { \"name\": \"_campaignId\", \"type\": \"uint256\" } ], \"name\": \"setStateToRefund\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }';\n            executeContract(JOGAKBO_CONTRACT_ADDRESS, functionJson, \"0\", \"[\\\"\".concat(_campaignId, \"\\\"]\"), setQrvalue, callback);\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function setStateToRefund(_x9, _x10, _x11) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var createCampaign = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_campaign_name, _campaign_description, _target_amount, setQrvalue, callback) {\n    var functionJson;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            functionJson = ' { \"constant\": false, \"inputs\": [ { \"name\": \"_campaign_name\", \"type\": \"string\" }, { \"name\": \"_campaign_description\", \"type\": \"string\" }, { \"name\": \"_target_amount\", \"type\": \"uint256\" } ], \"name\": \"createCampaign\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }';\n            executeContract(JOGAKBO_CONTRACT_ADDRESS, functionJson, \"0\", \"[\\\"\".concat(_campaign_name, \"\\\",\\\"\").concat(_campaign_description, \"\\\",\\\"\").concat(_target_amount, \"\\\"]\"), setQrvalue, callback);\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function createCampaign(_x12, _x13, _x14, _x15, _x16) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var executeContract = function executeContract(txTo, functionJSON, value, params, setQrvalue, callback) {\n  axios.post(A2P_API_PREPARE_URL, {\n    bapp: {\n      name: APP_NAME\n    },\n    type: \"execute_contract\",\n    transaction: {\n      to: txTo,\n      abi: functionJSON,\n      value: value,\n      params: params\n    }\n  }).then(function (response) {\n    var request_key = response.data.request_key;\n\n    if (isMobile) {\n      window.location.href = getKlipAccessUrl(\"android\", request_key);\n    } else {\n      setQrvalue(getKlipAccessUrl(\"QR\", request_key));\n    }\n\n    var timerId = setInterval(function () {\n      axios.get(\"https://a2a-api.klipwallet.com/v2/a2a/result?request_key=\".concat(request_key)).then(function (res) {\n        if (res.data.result) {\n          console.log(\"[result] \".concat(JSON.stringify(res.data.result)));\n          callback(res.data.result);\n          clearInterval(timerId);\n          setQrvalue(\"DEFAULT\");\n        }\n      });\n    }, 1000);\n  });\n};\nexport var getAddress = function getAddress(setQrvalue, callback) {\n  axios.post(A2P_API_PREPARE_URL, {\n    bapp: {\n      name: APP_NAME\n    },\n    type: \"auth\"\n  }).then(function (response) {\n    var request_key = response.data.request_key;\n\n    if (isMobile) {\n      window.location.href = getKlipAccessUrl(\"android\", request_key);\n    } else {\n      setQrvalue(getKlipAccessUrl(\"QR\", request_key));\n    }\n\n    console.log(\"response:\".concat(response));\n    var timerId = setInterval(function () {\n      axios.get(\"https://a2a-api.klipwallet.com/v2/a2a/result?request_key=\".concat(request_key)).then(function (res) {\n        if (res.data.result) {\n          console.log(\"[Result] \".concat(JSON.stringify(res.data.result)));\n          callback(res.data.result.klaytn_address);\n          clearInterval(timerId);\n          setQrvalue(\"DEFAULT\");\n        }\n      });\n    }, 1000);\n  });\n};","map":{"version":3,"sources":["/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/src/api/UseKlip.ts"],"names":["axios","JOGAKBO_CONTRACT_ADDRESS","A2P_API_PREPARE_URL","APP_NAME","isMobile","getKlipAccessUrl","method","request_key","refund","_campaignId","_userAddr","setQrvalue","callback","functionJson","executeContract","donateTocampaign","_amount","toString","setStateToRefund","createCampaign","_campaign_name","_campaign_description","_target_amount","txTo","functionJSON","value","params","post","bapp","name","type","transaction","to","abi","then","response","data","window","location","href","timerId","setInterval","get","res","result","console","log","JSON","stringify","clearInterval","getAddress","klaytn_address"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {JOGAKBO_CONTRACT_ADDRESS} from \"../constants/constants.baobab\";\n\nconst A2P_API_PREPARE_URL = \"https://a2a-api.klipwallet.com/v2/a2a/prepare\";\nconst APP_NAME = \"JOGAKBO\";\n// const isMobile = window.screen.width >= 1280 ? false : true;\nconst isMobile = false;\n\nconst getKlipAccessUrl = (method: string, request_key: string) => {\n  if (method === \"QR\") {\n    return `https://klipwallet.com/?target=/a2a?request_key=${request_key}`;\n  }\n  return `kakaotalk://klipwallet/open?url=https://klipwallet.com/?target=/a2a?request_key=${request_key}`;\n};\n\nexport const refund = async (\n  _campaignId: number,\n  _userAddr: string,\n  setQrvalue: Function,\n  callback: Function,\n) => {\n  const functionJson =\n    '{ \"constant\": false, \"inputs\": [ { \"name\": \"_campaignId\", \"type\": \"uint256\" }, { \"name\": \"_userAddr\", \"type\": \"address\" } ], \"name\": \"refund\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }';\n  executeContract(\n    JOGAKBO_CONTRACT_ADDRESS,\n    functionJson,\n    \"0\",\n    `[\\\"${_campaignId}\\\",\\\"${_userAddr}\\\"]`,\n    setQrvalue,\n    callback,\n  );\n};\n\nexport const donateTocampaign = async (\n  _campaignId: number,\n  _amount: number,\n  setQrvalue: Function,\n  callback: Function,\n) => {\n  const functionJson =\n    '{ \"constant\": false, \"inputs\": [ { \"name\": \"_campaignId\", \"type\": \"uint256\" }, { \"name\": \"_amount\", \"type\": \"uint256\" } ], \"name\": \"donateTocampaign\", \"outputs\": [], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"function\" }';\n  executeContract(\n    JOGAKBO_CONTRACT_ADDRESS,\n    functionJson,\n    (_amount * 10 ** 18).toString(),\n    `[\\\"${_campaignId}\\\",\\\"${_amount}\\\"]`,\n    setQrvalue,\n    callback,\n  );\n};\n\nexport const setStateToRefund = async (\n  _campaignId: number,\n  setQrvalue: Function,\n  callback: Function,\n) => {\n  const functionJson =\n    ' { \"constant\": false, \"inputs\": [ { \"name\": \"_campaignId\", \"type\": \"uint256\" } ], \"name\": \"setStateToRefund\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }';\n  executeContract(\n    JOGAKBO_CONTRACT_ADDRESS,\n    functionJson,\n    \"0\",\n    `[\\\"${_campaignId}\\\"]`,\n    setQrvalue,\n    callback,\n  );\n};\n\nexport const createCampaign = async (\n  _campaign_name: string,\n  _campaign_description: string,\n  _target_amount: number,\n  setQrvalue: Function,\n  callback: Function,\n) => {\n  const functionJson =\n    ' { \"constant\": false, \"inputs\": [ { \"name\": \"_campaign_name\", \"type\": \"string\" }, { \"name\": \"_campaign_description\", \"type\": \"string\" }, { \"name\": \"_target_amount\", \"type\": \"uint256\" } ], \"name\": \"createCampaign\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }';\n  executeContract(\n    JOGAKBO_CONTRACT_ADDRESS,\n    functionJson,\n    \"0\",\n    `[\\\"${_campaign_name}\\\",\\\"${_campaign_description}\\\",\\\"${_target_amount}\\\"]`,\n    setQrvalue,\n    callback,\n  );\n};\n\nexport const executeContract = (\n  txTo: string,\n  functionJSON: any,\n  value: string,\n  params: any,\n  setQrvalue: Function,\n  callback: Function,\n) => {\n  axios\n    .post(A2P_API_PREPARE_URL, {\n      bapp: {\n        name: APP_NAME,\n      },\n      type: \"execute_contract\",\n      transaction: {\n        to: txTo,\n        abi: functionJSON,\n        value: value,\n        params: params,\n      },\n    })\n    .then(response => {\n      const {request_key} = response.data;\n      if (isMobile) {\n        window.location.href = getKlipAccessUrl(\"android\", request_key);\n      } else {\n        setQrvalue(getKlipAccessUrl(\"QR\", request_key));\n      }\n      let timerId = setInterval(() => {\n        axios\n          .get(\n            `https://a2a-api.klipwallet.com/v2/a2a/result?request_key=${request_key}`,\n          )\n          .then(res => {\n            if (res.data.result) {\n              console.log(`[result] ${JSON.stringify(res.data.result)}`);\n              callback(res.data.result);\n              clearInterval(timerId);\n              setQrvalue(\"DEFAULT\");\n            }\n          });\n      }, 1000);\n    });\n};\n\nexport const getAddress = (setQrvalue: Function, callback: Function) => {\n  axios\n    .post(A2P_API_PREPARE_URL, {\n      bapp: {\n        name: APP_NAME,\n      },\n      type: \"auth\",\n    })\n    .then(response => {\n      const {request_key} = response.data;\n      if (isMobile) {\n        window.location.href = getKlipAccessUrl(\"android\", request_key);\n      } else {\n        setQrvalue(getKlipAccessUrl(\"QR\", request_key));\n      }\n\n      console.log(`response:${response}`);\n\n      let timerId = setInterval(() => {\n        axios\n          .get(\n            `https://a2a-api.klipwallet.com/v2/a2a/result?request_key=${request_key}`,\n          )\n          .then(res => {\n            if (res.data.result) {\n              console.log(`[Result] ${JSON.stringify(res.data.result)}`);\n              callback(res.data.result.klaytn_address);\n              clearInterval(timerId);\n              setQrvalue(\"DEFAULT\");\n            }\n          });\n      }, 1000);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}