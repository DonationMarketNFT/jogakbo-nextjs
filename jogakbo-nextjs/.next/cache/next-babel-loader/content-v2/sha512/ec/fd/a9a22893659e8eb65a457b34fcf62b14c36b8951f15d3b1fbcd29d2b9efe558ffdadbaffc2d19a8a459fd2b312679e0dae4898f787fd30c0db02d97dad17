{"ast":null,"code":"import axios from \"axios\"; // 쿠키가 있다면 삭제하고 쿠키를 만들어주는 함수 + recoil에 주소 저장\n\nexport const login = async (myAddress, callback) => {\n  const user = await axios.get(\"/api/user\"); // 쿠키 존재한다면 쿠키 삭제\n\n  if (user.data.address) {\n    axios.get(\"/api/auth/logout\");\n  } // 쿠키 생성\n\n\n  const credentials = {\n    myAddress\n  };\n  axios.post(\"/api/auth/login\", credentials);\n  callback(myAddress);\n}; // 쿠키 삭제 (로그아웃)\n\nexport const logout = async () => {\n  const user = await axios.get(\"/api/auth/logout\");\n  console.log(user);\n}; // 유저 정보 조회 + 주소 recoil 설정\n\nexport const getDataFromCookie = async callback => {\n  await axios.get(\"/api/user\").then(user => {\n    const user_key = user;\n\n    if (user.data.address) {\n      console.log(user_key);\n      callback(user.data.address);\n    } else {\n      console.log(user_key);\n    }\n  });\n};\nexport const isValidToken = async callback => {\n  const user = await axios.get(\"/api/user\");\n\n  if (user.data.address) {\n    callback(true);\n  }\n};","map":{"version":3,"sources":["/Users/kimdawoon/jogakbo-nextjs/jogakbo-nextjs/src/api/Login.ts"],"names":["axios","login","myAddress","callback","user","get","data","address","credentials","post","logout","console","log","getDataFromCookie","then","user_key","isValidToken"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,KAAK,GAAG,OAAOC,SAAP,EAA0BC,QAA1B,KAAiD;AACpE,QAAMC,IAAI,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,WAAV,CAAnB,CADoE,CAEpE;;AACA,MAAID,IAAI,CAACE,IAAL,CAAUC,OAAd,EAAuB;AACrBP,IAAAA,KAAK,CAACK,GAAN,CAAU,kBAAV;AACD,GALmE,CAMpE;;;AACA,QAAMG,WAAW,GAAG;AAACN,IAAAA;AAAD,GAApB;AACAF,EAAAA,KAAK,CAACS,IAAN,CAAW,iBAAX,EAA8BD,WAA9B;AACAL,EAAAA,QAAQ,CAACD,SAAD,CAAR;AACD,CAVM,C,CAYP;;AACA,OAAO,MAAMQ,MAAM,GAAG,YAAY;AAChC,QAAMN,IAAI,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,kBAAV,CAAnB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACD,CAHM,C,CAKP;;AACA,OAAO,MAAMS,iBAAiB,GAAG,MAAOV,QAAP,IAA8B;AAC7D,QAAMH,KAAK,CAACK,GAAN,CAAU,WAAV,EAAuBS,IAAvB,CAA4BV,IAAI,IAAI;AACxC,UAAMW,QAAQ,GAAGX,IAAjB;;AACA,QAAIA,IAAI,CAACE,IAAL,CAAUC,OAAd,EAAuB;AACrBI,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACAZ,MAAAA,QAAQ,CAACC,IAAI,CAACE,IAAL,CAAUC,OAAX,CAAR;AACD,KAHD,MAGO;AACLI,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACD;AACF,GARK,CAAN;AASD,CAVM;AAYP,OAAO,MAAMC,YAAY,GAAG,MAAOb,QAAP,IAA8B;AACxD,QAAMC,IAAI,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,WAAV,CAAnB;;AACA,MAAID,IAAI,CAACE,IAAL,CAAUC,OAAd,EAAuB;AACrBJ,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,CALM","sourcesContent":["import axios from \"axios\";\n\n// 쿠키가 있다면 삭제하고 쿠키를 만들어주는 함수 + recoil에 주소 저장\nexport const login = async (myAddress: string, callback: Function) => {\n  const user = await axios.get(\"/api/user\");\n  // 쿠키 존재한다면 쿠키 삭제\n  if (user.data.address) {\n    axios.get(\"/api/auth/logout\");\n  }\n  // 쿠키 생성\n  const credentials = {myAddress};\n  axios.post(\"/api/auth/login\", credentials);\n  callback(myAddress);\n};\n\n// 쿠키 삭제 (로그아웃)\nexport const logout = async () => {\n  const user = await axios.get(\"/api/auth/logout\");\n  console.log(user);\n};\n\n// 유저 정보 조회 + 주소 recoil 설정\nexport const getDataFromCookie = async (callback: Function) => {\n  await axios.get(\"/api/user\").then(user => {\n    const user_key = user;\n    if (user.data.address) {\n      console.log(user_key);\n      callback(user.data.address);\n    } else {\n      console.log(user_key);\n    }\n  });\n};\n\nexport const isValidToken = async (callback: Function) => {\n  const user = await axios.get(\"/api/user\");\n  if (user.data.address) {\n    callback(true);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}