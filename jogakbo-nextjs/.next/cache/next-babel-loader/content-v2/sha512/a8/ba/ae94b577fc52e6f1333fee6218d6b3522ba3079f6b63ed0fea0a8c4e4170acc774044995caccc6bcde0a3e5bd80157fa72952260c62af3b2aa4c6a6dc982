{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useRecoilState, useResetRecoilState } from \"recoil\";\nimport { media } from \"../../styles/theme\";\nimport { getBalance // testOwnTokenId,\n// testTokenId2Description,\n// testTokenId2Name,\n} from \"../api/UseCaver\";\nimport { myAddressState, myBalanceState } from \"../../atom\";\nimport { faClone } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Seo from \"../components/Seo\";\nimport { deleteAccount, getUserAddress } from \"../api/accountWc\";\nimport { useRouter } from \"next/dist/client/router\";\nimport axios from \"axios\";\nconst Wrapper = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__Wrapper\",\n  componentId: \"sc-6wvjb6-0\"\n})([\"height:100%;background:\", \";\"], props => props.theme.bgColor);\nconst Container = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__Container\",\n  componentId: \"sc-6wvjb6-1\"\n})([\"display:flex;flex-direction:column;padding:200px 0 70px 0;width:935px;margin:0 auto;\", \"{width:auto;padding:170px 0 100px 0;}\", \"{padding:100px 0 50px 0;}\"], media.tablet, media.mobile);\nconst ProfileContainer = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__ProfileContainer\",\n  componentId: \"sc-6wvjb6-2\"\n})([\"display:flex;flex-direction:column;align-items:center;margin-bottom:80px;\"]);\nconst ProfileImage = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__ProfileImage\",\n  componentId: \"sc-6wvjb6-3\"\n})([\"background-image:linear-gradient(rgba(0,0,0,0),rgba(0,0,0,0.5)),url(\", \");background-size:cover;background-position:center center;margin:10px;width:300px;height:300px;border-radius:50%;\", \"{width:220px;height:220px;}\", \"{width:200px;height:200px;}\"], props => props.bgphoto, media.tablet, media.mobile);\nconst ProfileInfoBox = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__ProfileInfoBox\",\n  componentId: \"sc-6wvjb6-4\"\n})([\"width:50%;margin:10px;\", \"{width:100%;padding:0 30px;}\"], media.mobile);\nconst ProfileInfo = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__ProfileInfo\",\n  componentId: \"sc-6wvjb6-5\"\n})([\"display:flex;position:relative;margin-top:20px;height:50px;label{position:absolute;top:-18px;left:5px;color:gray;}input{all:unset;color:\", \";height:40px;padding:0 10px;font-size:18px;width:100%;}\"], props => props.theme.textColor);\nconst Withdraw = /*#__PURE__*/styled.button.withConfig({\n  displayName: \"mypage__Withdraw\",\n  componentId: \"sc-6wvjb6-6\"\n})([\"width:50%;margin:0 auto;text-align:center;background:red;padding:10px 12px;border-radius:5px;color:white;font-size:12px;cursor:pointer;\"]);\nconst NFTContainer = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__NFTContainer\",\n  componentId: \"sc-6wvjb6-7\"\n})([\"position:relative;display:grid;grid-template-columns:repeat(4,1fr);gap:20px 15px;width:935px;padding:30px;margin:0 auto;margin-bottom:200px;h3{position:absolute;left:30px;color:\", \";}\", \"{width:auto;}\", \"{grid-template-columns:repeat(2,1fr);margin-bottom:100px;}\"], props => props.theme.textColor, media.tablet, media.mobile);\nconst NFTBox = /*#__PURE__*/styled(motion.div).withConfig({\n  displayName: \"mypage__NFTBox\",\n  componentId: \"sc-6wvjb6-8\"\n})([\"background:pink;background-size:cover;background-position:center center;height:200px;border-radius:10px;\", \"{height:150px;}\", \"{height:130px;}\"], media.tablet, media[768]);\nconst CopyBox = /*#__PURE__*/styled.div.withConfig({\n  displayName: \"mypage__CopyBox\",\n  componentId: \"sc-6wvjb6-9\"\n})([\"position:absolute;right:10px;top:10px;color:white;display:flex;justify-content:center;align-items:center;cursor:pointer;svg{width:20px;color:black;}\"]);\nconst boxVariants = {\n  hover: {\n    scale: 1.05\n  }\n};\nconst DEFAULT_IMAGE = \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\";\n\nfunction Mypage() {\n  const {\n    0: profile,\n    1: setProfile\n  } = useState(DEFAULT_IMAGE);\n  const [myAddress, setMyAddress] = useRecoilState(myAddressState);\n  const [myBalance, setMyBalance] = useRecoilState(myBalanceState);\n  const copyLinkRef = useRef();\n  const {\n    0: ownToken,\n    1: setOwnToken\n  } = useState([]);\n  const {\n    0: userId,\n    1: setUserId\n  } = useState(0);\n  const router = useRouter();\n  const resetAddressState = useResetRecoilState(myAddressState); // const getOwnTokenIds = async (address: string) => {\n  //   const ids = await testOwnTokenId(address);\n  //   return ids;\n  // };\n  // const getOwnTokenInfo = async () => {\n  //   if (myAddress !== \"0x00\") {\n  //     let ownTokenArray = [];\n  //     const ids = await getOwnTokenIds(myAddress);\n  //     for (let id of ids) {\n  //       const description = await testTokenId2Description(id);\n  //       const name = await testTokenId2Name(id);\n  //       ownTokenArray.push([id, name, description]);\n  //     }\n  //     setOwnToken(ownTokenArray);\n  //   }\n  // };\n  // const getUserData = async () => {\n  //   setModalProps({\n  //     title: \"Klip 지갑을 연동하시겠습니까?\",\n  //     onConfirm: () => {\n  //       KlipAPI.getAddress(setQrvalue, async (address: string) => {\n  //         setMyAddress(address);\n  //         const _balance = await getBalance(address);\n  //         setMyBalance(_balance);\n  //       });\n  //     },\n  //   });\n  //   // setConnectWallet(true);\n  // };\n  // useEffect(() => {\n  // getOwnTokenInfo();\n  // }, []);\n\n  const handleLogOut = async () => {\n    const user = await axios.get(\"/api/auth/logout\");\n    console.log(user);\n    resetAddressState();\n  };\n\n  const deleteUser = () => {\n    deleteAccount(userId);\n    alert(\"이용해주셔서 감사합니다\");\n    handleLogOut();\n    router.push(\"/\");\n  };\n\n  const copyAddress = () => {\n    copyLinkRef.current.focus();\n    copyLinkRef.current.select();\n    navigator.clipboard.writeText(copyLinkRef.current.value).then(() => {\n      alert(\"주소를 복사했습니다.\");\n    });\n  };\n\n  const getUserData = () => {\n    if (myAddress !== \"0x00\") {\n      // const result = await getUserAddress(myAddress, setData);\n      getUserAddress(myAddress, async id => {\n        await setUserId(id);\n        const balance = await getBalance(myAddress);\n        setMyBalance(balance);\n      });\n    }\n  };\n\n  useEffect(() => {\n    getUserData();\n  }, [myAddress]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Seo, {\n      title: \"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0\"\n    }), /*#__PURE__*/_jsx(Wrapper, {\n      children: /*#__PURE__*/_jsxs(Container, {\n        children: [/*#__PURE__*/_jsxs(ProfileContainer, {\n          children: [/*#__PURE__*/_jsx(ProfileImage, {\n            bgphoto: profile\n          }), /*#__PURE__*/_jsx(ProfileInfoBox, {\n            children: myAddress !== \"0x00\" && /*#__PURE__*/_jsxs(_Fragment, {\n              children: [/*#__PURE__*/_jsxs(ProfileInfo, {\n                children: [/*#__PURE__*/_jsx(\"label\", {\n                  htmlFor: \"address\",\n                  children: \"Wallet Address\"\n                }), /*#__PURE__*/_jsx(\"input\", {\n                  id: \"address\",\n                  readOnly: true,\n                  type: \"text\",\n                  value: myAddress,\n                  ref: copyLinkRef\n                }), /*#__PURE__*/_jsx(CopyBox, {\n                  onClick: copyAddress,\n                  children: /*#__PURE__*/_jsx(FontAwesomeIcon, {\n                    icon: faClone\n                  })\n                })]\n              }), /*#__PURE__*/_jsxs(ProfileInfo, {\n                children: [/*#__PURE__*/_jsx(\"label\", {\n                  htmlFor: \"balance\",\n                  children: \"Wallet Balance\"\n                }), /*#__PURE__*/_jsx(\"input\", {\n                  id: \"balance\",\n                  readOnly: true,\n                  type: \"text\",\n                  value: `${myBalance} Klay`\n                })]\n              })]\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(NFTContainer, {\n          children: [/*#__PURE__*/_jsx(\"h3\", {\n            children: \"My NFTs\"\n          }), ownToken.map((data, i) => /*#__PURE__*/_jsx(_Fragment, {\n            children: /*#__PURE__*/_jsx(NFTBox, {\n              variants: boxVariants,\n              whileHover: \"hover\",\n              children: data[1]\n            }, i)\n          }))]\n        }), /*#__PURE__*/_jsx(Withdraw, {\n          onClick: deleteUser,\n          children: \"\\uD68C\\uC6D0 \\uD0C8\\uD1F4\"\n        })]\n      })\n    })]\n  });\n}\n\nexport default Mypage;","map":null,"metadata":{},"sourceType":"module"}